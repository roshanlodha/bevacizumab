{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"x",
				"label.x.npc"
			],
			[
				"colla",
				"collagen_genes"
			],
			[
				"de",
				"deseq"
			],
			[
				"su",
				"sup"
			],
			[
				"new_g",
				"new_group_maker"
			],
			[
				"new",
				"new_groups"
			],
			[
				"new_",
				"new_group3"
			],
			[
				"group",
				"new_group4"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "roshanlodha@Roshans-MacBook-Air bev % ls                                                    \nArchive.zip             bev.sublime-project     plots\nLodha et al v6.docx     bev.sublime-workspace   survival\nREAMDE.Rmd              ihc                     tables\nRplots.pdf              input\nbev.R                   old\nroshanlodha@Roshans-MacBook-Air bev % cd ihc                                                \nroshanlodha@Roshans-MacBook-Air ihc % R                                                     \n\nR version 4.2.0 (2022-04-22) -- \"Vigorous Calisthenics\"\nCopyright (C) 2022 The R Foundation for Statistical Computing\nPlatform: x86_64-apple-darwin21.3.0 (64-bit)\n\nR is free software and comes with ABSOLUTELY NO WARRANTY.\nYou are welcome to redistribute it under certain conditions.\nType 'license()' or 'licence()' for distribution details.\n\n  Natural language support but running in an English locale\n\nR is a collaborative project with many contributors.\nType 'contributors()' for more information and\n'citation()' on how to cite R or R packages in publications.\n\nType 'demo()' for some demos, 'help()' for on-line help, or\n'help.start()' for an HTML browser interface to help.\nType 'q()' to quit R.\n\n> library(tidyverse)\n── Attaching packages ─────────────────────────────────────────────────── tidyverse 1.3.1 ──\n✔ ggplot2 3.3.6     ✔ purrr   0.3.4\n✔ tibble  3.1.7     ✔ dplyr   1.0.9\n✔ tidyr   1.2.0     ✔ stringr 1.4.0\n✔ readr   2.1.2     ✔ forcats 0.5.1\n── Conflicts ────────────────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n> library(ggprism)\n> library(svglite)\n> library(ggpubr)\n> rawihc <- read_csv(\"./ihcraw.csv\")\nRows: 70 Columns: 14                                                          \n── Column specification ────────────────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (3): pdx_id, bev_resp, has_plus_two\ndbl (10): animal_id, field_n, neg, wk, plus_one, plus_two, sum, h_score, h_s...\nlgl  (1): staining_type\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n> rawihc\n# A tibble: 70 × 14\n   pdx_id bev_resp staining_type animal_id field_n   neg    wk plus_one plus_two\n   <chr>  <chr>    <lgl>             <dbl>   <dbl> <dbl> <dbl>    <dbl>    <dbl>\n 1 g39    good     NA                 6919       1  0.1   0.7      0.2         0\n 2 g39    good     NA                 6919       2  0.1   0.7      0.2         0\n 3 g39    good     NA                 6919       3  0.25  0.6      0.15        0\n 4 g39    good     NA                 6919       4  0.25  0.6      0.15        0\n 5 g39    good     NA                 6919       5  0.15  0.7      0.15        0\n 6 g39    good     NA                 6919       6  0.25  0.65     0.1         0\n 7 g39    good     NA                 6919       7  0.3   0.5      0.2         0\n 8 g39    good     NA                 7244       1  0.15  0.8      0.05        0\n 9 g39    good     NA                 7244       2  0.1   0.85     0.05        0\n10 g39    good     NA                 7244       3  0.1   0.9      0           0\n# … with 60 more rows, and 5 more variables: has_plus_two <chr>, sum <dbl>,\n#   h_score <dbl>, h_score_alt <dbl>, rna_tpm <dbl>\n> rawihc %>% group_by(animal_id) %>% summarise_at(vars(neg), list(name = mean))\n# A tibble: 10 × 2\n   animal_id   name\n       <dbl>  <dbl>\n 1      2747 0.0571\n 2      3132 0     \n 3      3209 0.0357\n 4      6451 0.0214\n 5      6495 0     \n 6      6919 0.2   \n 7      7244 0.136 \n 8      7436 0.107 \n 9      7911 0     \n10      8007 0.0714\n> rawihc %>% group_by(animal_id) %>% summarise_at(vars(neg, wk, plus_one), list(name = mean)​‌​\n)\n# A tibble: 10 × 4\n   animal_id neg_name wk_name plus_one_name\n       <dbl>    <dbl>   <dbl>         <dbl>\n 1      2747   0.0571   0.586        0.314 \n 2      3132   0        0.171        0.829 \n 3      3209   0.0357   0.757        0.207 \n 4      6451   0.0214   0.25         0.629 \n 5      6495   0        0.136        0.771 \n 6      6919   0.2      0.636        0.164 \n 7      7244   0.136    0.821        0.0429\n 8      7436   0.107    0.75         0.143 \n 9      7911   0        0.579        0.393 \n10      8007   0.0714   0.736        0.193 \n> rawihc %>% group_by(animal_id) %>% summarise_at(vars(neg, wk, plus_one), list(mean = mean)​‌​\n)\n# A tibble: 10 × 4\n   animal_id neg_mean wk_mean plus_one_mean\n       <dbl>    <dbl>   <dbl>         <dbl>\n 1      2747   0.0571   0.586        0.314 \n 2      3132   0        0.171        0.829 \n 3      3209   0.0357   0.757        0.207 \n 4      6451   0.0214   0.25         0.629 \n 5      6495   0        0.136        0.771 \n 6      6919   0.2      0.636        0.164 \n 7      7244   0.136    0.821        0.0429\n 8      7436   0.107    0.75         0.143 \n 9      7911   0        0.579        0.393 \n10      8007   0.0714   0.736        0.193 \n> ihc <- rawihc %>%\n+   group_by(animal_id) %>%\n+   summarise_at(vars(neg, wk, plus_one), list(mean = mean))\n> ihc\n# A tibble: 10 × 4\n   animal_id neg_mean wk_mean plus_one_mean\n       <dbl>    <dbl>   <dbl>         <dbl>\n 1      2747   0.0571   0.586        0.314 \n 2      3132   0        0.171        0.829 \n 3      3209   0.0357   0.757        0.207 \n 4      6451   0.0214   0.25         0.629 \n 5      6495   0        0.136        0.771 \n 6      6919   0.2      0.636        0.164 \n 7      7244   0.136    0.821        0.0429\n 8      7436   0.107    0.75         0.143 \n 9      7911   0        0.579        0.393 \n10      8007   0.0714   0.736        0.193 \n> rawihc\n# A tibble: 70 × 14\n   pdx_id bev_resp staining_type animal_id field_n   neg    wk plus_one plus_two\n   <chr>  <chr>    <lgl>             <dbl>   <dbl> <dbl> <dbl>    <dbl>    <dbl>\n 1 g39    good     NA                 6919       1  0.1   0.7      0.2         0\n 2 g39    good     NA                 6919       2  0.1   0.7      0.2         0\n 3 g39    good     NA                 6919       3  0.25  0.6      0.15        0\n 4 g39    good     NA                 6919       4  0.25  0.6      0.15        0\n 5 g39    good     NA                 6919       5  0.15  0.7      0.15        0\n 6 g39    good     NA                 6919       6  0.25  0.65     0.1         0\n 7 g39    good     NA                 6919       7  0.3   0.5      0.2         0\n 8 g39    good     NA                 7244       1  0.15  0.8      0.05        0\n 9 g39    good     NA                 7244       2  0.1   0.85     0.05        0\n10 g39    good     NA                 7244       3  0.1   0.9      0           0\n# … with 60 more rows, and 5 more variables: has_plus_two <chr>, sum <dbl>,\n#   h_score <dbl>, h_score_alt <dbl>, rna_tpm <dbl>\n> ihc <- rawihc %>%\n+   group_by(animal_id) %>%\n+   summarise_at(vars(neg, wk, plus_one), list(mean = mean))\n> ihc <- rawihc %>%\n+   group_by(animal_id) %>%\n+   summarise_at(vars(neg, wk, plus_one, bev_resp), list(mean = mean))\nWarning messages:\n1: In mean.default(bev_resp) :\n  argument is not numeric or logical: returning NA\n2: In mean.default(bev_resp) :\n  argument is not numeric or logical: returning NA\n3: In mean.default(bev_resp) :\n  argument is not numeric or logical: returning NA\n4: In mean.default(bev_resp) :\n  argument is not numeric or logical: returning NA\n5: In mean.default(bev_resp) :\n  argument is not numeric or logical: returning NA\n6: In mean.default(bev_resp) :\n  argument is not numeric or logical: returning NA\n7: In mean.default(bev_resp) :\n  argument is not numeric or logical: returning NA\n8: In mean.default(bev_resp) :\n  argument is not numeric or logical: returning NA\n9: In mean.default(bev_resp) :\n  argument is not numeric or logical: returning NA\n10: In mean.default(bev_resp) :\n  argument is not numeric or logical: returning NA\n> ihc <- rawihc %>%\n+   group_by(animal_id, bev_resp) %>%\n+   summarise_at(vars(neg, wk, plus_one), list(mean = mean))\n> ihc\n# A tibble: 10 × 5\n# Groups:   animal_id [10]\n   animal_id bev_resp neg_mean wk_mean plus_one_mean\n       <dbl> <chr>       <dbl>   <dbl>         <dbl>\n 1      2747 poor       0.0571   0.586        0.314 \n 2      3132 poor       0        0.171        0.829 \n 3      3209 poor       0.0357   0.757        0.207 \n 4      6451 poor       0.0214   0.25         0.629 \n 5      6495 poor       0        0.136        0.771 \n 6      6919 good       0.2      0.636        0.164 \n 7      7244 good       0.136    0.821        0.0429\n 8      7436 good       0.107    0.75         0.143 \n 9      7911 good       0        0.579        0.393 \n10      8007 good       0.0714   0.736        0.193 \n> dim(ihc)\n[1] 10  5\n> ihc[1][2]\nError in `vectbl_as_col_location()`:\n! Can't subset columns past the end.\nℹ Location 2 doesn't exist.\nℹ There is only 1 column.\nRun `rlang::last_error()` to see where the error occurred.\n> ihc[1, 2]                                                                                 \n# A tibble: 1 × 1\n  bev_resp\n  <chr>   \n1 poor    \n> ihc[1, 1]                                                                                 \n# A tibble: 1 × 1\n# Groups:   animal_id [1]\n  animal_id\n      <dbl>\n1      2747\n> ihc[1, 3:5]                                                                               \n# A tibble: 1 × 3\n  neg_mean wk_mean plus_one_mean\n     <dbl>   <dbl>         <dbl>\n1   0.0571   0.586         0.314\n> list(ihc[1, 3:5])\n[[1]]\n# A tibble: 1 × 3\n  neg_mean wk_mean plus_one_mean\n     <dbl>   <dbl>         <dbl>\n1   0.0571   0.586         0.314\n\n> values(ihc[1, 3:5])                                                                        \nError in values(ihc[1, 3:5]) : could not find function \"values\"\n> ihc %>%                                                                                   \n+   rowwise() %>%\n+   mutate(\n+     test_stat = chisq.test(c(neg_mean, wk_mean, plus_one_mean))$statistic,\n+     p_val = chisq.test(c(obs.1, obs.2))$p.value\n+   )\nError in `mutate()`:\n! Problem while computing `p_val = chisq.test(c(obs.1, obs.2))$p.value`.\nℹ The error occurred in row 1.\nCaused by error in `is.data.frame()`:\n! object 'obs.1' not found\nRun `rlang::last_error()` to see where the error occurred.\nWarning messages:\n1: Problem while computing `test_stat = chisq.test(c(neg_mean, wk_mean,\nplus_one_mean))$statistic`.\nℹ Chi-squared approximation may be incorrect\nℹ The warning occurred in row 1. \n2: Problem while computing `test_stat = chisq.test(c(neg_mean, wk_mean,\nplus_one_mean))$statistic`.\nℹ Chi-squared approximation may be incorrect\nℹ The warning occurred in row 2. \n3: Problem while computing `test_stat = chisq.test(c(neg_mean, wk_mean,\nplus_one_mean))$statistic`.\nℹ Chi-squared approximation may be incorrect\nℹ The warning occurred in row 3. \n4: Problem while computing `test_stat = chisq.test(c(neg_mean, wk_mean,\nplus_one_mean))$statistic`.\nℹ Chi-squared approximation may be incorrect\nℹ The warning occurred in row 4. \n5: Problem while computing `test_stat = chisq.test(c(neg_mean, wk_mean,\nplus_one_mean))$statistic`.\nℹ Chi-squared approximation may be incorrect\nℹ The warning occurred in row 5. \n6: Problem while computing `test_stat = chisq.test(c(neg_mean, wk_mean,\nplus_one_mean))$statistic`.\nℹ Chi-squared approximation may be incorrect\nℹ The warning occurred in row 6. \n7: Problem while computing `test_stat = chisq.test(c(neg_mean, wk_mean,\nplus_one_mean))$statistic`.\nℹ Chi-squared approximation may be incorrect\nℹ The warning occurred in row 7. \n8: Problem while computing `test_stat = chisq.test(c(neg_mean, wk_mean,\nplus_one_mean))$statistic`.\nℹ Chi-squared approximation may be incorrect\nℹ The warning occurred in row 8. \n9: Problem while computing `test_stat = chisq.test(c(neg_mean, wk_mean,\nplus_one_mean))$statistic`.\nℹ Chi-squared approximation may be incorrect\nℹ The warning occurred in row 9. \n10: Problem while computing `test_stat = chisq.test(c(neg_mean, wk_mean,\nplus_one_mean))$statistic`.\nℹ Chi-squared approximation may be incorrect\nℹ The warning occurred in row 10. \n> ihc %>%\n+   rowwise() %>%\n+   mutate(\n+     test_stat = chisq.test(c(neg_mean, wk_mean, plus_one_mean))$statistic,\n+     #p_val = chisq.test(c(obs.1, obs.2))$p.value\n+   )\n# A tibble: 10 × 6\n# Rowwise:  animal_id\n   animal_id bev_resp neg_mean wk_mean plus_one_mean test_stat\n       <dbl> <chr>       <dbl>   <dbl>         <dbl>     <dbl>\n 1      2747 poor       0.0571   0.586        0.314      0.438\n 2      3132 poor       0        0.171        0.829      1.15 \n 3      3209 poor       0.0357   0.757        0.207      0.852\n 4      6451 poor       0.0214   0.25         0.629      0.627\n 5      6495 poor       0        0.136        0.771      1.12 \n 6      6919 good       0.2      0.636        0.164      0.413\n 7      7244 good       0.136    0.821        0.0429     1.08 \n 8      7436 good       0.107    0.75         0.143      0.783\n 9      7911 good       0        0.579        0.393      0.539\n10      8007 good       0.0714   0.736        0.193      0.751\nWarning messages:\n1: Problem while computing `test_stat = chisq.test(c(neg_mean, wk_mean,\nplus_one_mean))$statistic`.\n Chi-squared approximation may be incorrect\nℹ The warning occurred in row 1. \n2: Problem while computing `test_stat = chisq.test(c(neg_mean, wk_mean,\nplus_one_mean))$statistic`.\nℹ Chi-squared approximation may be incorrect\nℹ The warning occurred in row 2. \n3: Problem while computing `test_stat = chisq.test(c(neg_mean, wk_mean,\nplus_one_mean))$statistic`.\nℹ Chi-squared approximation may be incorrect\nℹ The warning occurred in row 3. \n4: Problem while computing `test_stat = chisq.test(c(neg_mean, wk_mean,\nplus_one_mean))$statistic`.\nℹ Chi-squared approximation may be incorrect\nℹ The warning occurred in row 4. \n5: Problem while computing `test_stat = chisq.test(c(neg_mean, wk_mean,\nplus_one_mean))$statistic`.\nℹ Chi-squared approximation may be incorrect\nℹ The warning occurred in row 5. \n6: Problem while computing `test_stat = chisq.test(c(neg_mean, wk_mean,\nplus_one_mean))$statistic`.\nℹ Chi-squared approximation may be incorrect\nℹ The warning occurred in row 6. \n7: Problem while computing `test_stat = chisq.test(c(neg_mean, wk_mean,\nplus_one_mean))$statistic`.\nℹ Chi-squared approximation may be incorrect\nℹ The warning occurred in row 7. \n8: Problem while computing `test_stat = chisq.test(c(neg_mean, wk_mean,\nplus_one_mean))$statistic`.\nℹ Chi-squared approximation may be incorrect\nℹ The warning occurred in row 8. \n9: Problem while computing `test_stat = chisq.test(c(neg_mean, wk_mean,\nplus_one_mean))$statistic`.\nℹ Chi-squared approximation may be incorrect\nℹ The warning occurred in row 9. \n10: Problem while computing `test_stat = chisq.test(c(neg_mean, wk_mean,\nplus_one_mean))$statistic`.\nℹ Chi-squared approximation may be incorrect\nℹ The warning occurred in row 10. \n> ihc %>%\n+   rowwise() %>%\n+   mutate(\n+     test_stat = chisq.test(c(neg_mean, wk_mean, plus_one_mean))$statistic,\n+     p_val = chisq.test(c(neg_mean, wk_mean, plus_one_mean))$p.value\n+   )\n# A tibble: 10 × 7\n# Rowwise:  animal_id\n   animal_id bev_resp neg_mean wk_mean plus_one_mean test_stat p_val\n       <dbl> <chr>       <dbl>   <dbl>         <dbl>     <dbl> <dbl>\n 1      2747 poor       0.0571   0.586        0.314      0.438 0.803\n 2      3132 poor       0        0.171        0.829      1.15  0.563\n 3      3209 poor       0.0357   0.757        0.207      0.852 0.653\n 4      6451 poor       0.0214   0.25         0.629      0.627 0.731\n 5      6495 poor       0        0.136        0.771      1.12  0.571\n 6      6919 good       0.2      0.636        0.164      0.413 0.813\n 7      7244 good       0.136    0.821        0.0429     1.08  0.581\n 8      7436 good       0.107    0.75         0.143      0.783 0.676\n 9      7911 good       0        0.579        0.393      0.539 0.764\n10      8007 good       0.0714   0.736        0.193      0.751 0.687\nThere were 20 warnings (use warnings() to see them)\n> ihc %>%\n+   rowwise() %>%\n+   mutate(\n+     test_stat = chisq.test(c(neg_mean, wk_mean, plus_one_mean), p = c(1, 0, 0))$statistic,\n+     p_val = chisq.test(c(neg_mean, wk_mean, plus_one_mean), p = c(1, 0, 0))$p.value\n+   )\n# A tibble: 10 × 7\n# Rowwise:  animal_id\n   animal_id bev_resp neg_mean wk_mean plus_one_mean test_stat p_val\n       <dbl> <chr>       <dbl>   <dbl>         <dbl>     <dbl> <dbl>\n 1      2747 poor       0.0571   0.586        0.314        Inf     0\n 2      3132 poor       0        0.171        0.829        Inf     0\n 3      3209 poor       0.0357   0.757        0.207        Inf     0\n 4      6451 poor       0.0214   0.25         0.629        Inf     0\n 5      6495 poor       0        0.136        0.771        Inf     0\n 6      6919 good       0.2      0.636        0.164        Inf     0\n 7      7244 good       0.136    0.821        0.0429       Inf     0\n 8      7436 good       0.107    0.75         0.143        Inf     0\n 9      7911 good       0        0.579        0.393        Inf     0\n10      8007 good       0.0714   0.736        0.193        Inf     0\nThere were 20 warnings (use warnings() to see them)\n> ihc %>%\n+   rowwise() %>%\n+   mutate(\n+     test_stat = chisq.test(c(neg_mean, wk_mean, plus_one_mean), p = c(1/3, 1/3, 1/3))$stat​‌​\nistic,\n+     p_val = chisq.test(c(neg_mean, wk_mean, plus_one_mean), p = c(1/3, 1/3, 1/3))$p.value\n+   )\n# A tibble: 10 × 7\n# Rowwise:  animal_id\n   animal_id bev_resp neg_mean wk_mean plus_one_mean test_stat p_val\n       <dbl> <chr>       <dbl>   <dbl>         <dbl>     <dbl> <dbl>\n 1      2747 poor       0.0571   0.586        0.314      0.438 0.803\n 2      3132 poor       0        0.171        0.829      1.15  0.563\n 3      3209 poor       0.0357   0.757        0.207      0.852 0.653\n 4      6451 poor       0.0214   0.25         0.629      0.627 0.731\n 5      6495 poor       0        0.136        0.771      1.12  0.571\n 6      6919 good       0.2      0.636        0.164      0.413 0.813\n 7      7244 good       0.136    0.821        0.0429     1.08  0.581\n 8      7436 good       0.107    0.75         0.143      0.783 0.676\n 9      7911 good       0        0.579        0.393      0.539 0.764\n10      8007 good       0.0714   0.736        0.193      0.751 0.687\nThere were 20 warnings (use warnings() to see them)\n> ihc %>%\n+   rowwise() %>%\n+   mutate(\n+     test_stat = chisq.test(c(neg_mean, wk_mean, plus_one_mean), p = c(0, 1, 0))$statistic,\n+     p_val = chisq.test(c(neg_mean, wk_mean, plus_one_mean), p = c(0, 1, 0))$p.value\n+   )\n# A tibble: 10 × 7\n# Rowwise:  animal_id\n   animal_id bev_resp neg_mean wk_mean plus_one_mean test_stat p_val\n       <dbl> <chr>       <dbl>   <dbl>         <dbl>     <dbl> <dbl>\n 1      2747 poor       0.0571   0.586        0.314        Inf     0\n 2      3132 poor       0        0.171        0.829        NaN   NaN\n 3      3209 poor       0.0357   0.757        0.207        Inf     0\n 4      6451 poor       0.0214   0.25         0.629        Inf     0\n 5      6495 poor       0        0.136        0.771        NaN   NaN\n 6      6919 good       0.2      0.636        0.164        Inf     0\n 7      7244 good       0.136    0.821        0.0429       Inf     0\n 8      7436 good       0.107    0.75         0.143        Inf     0\n 9      7911 good       0        0.579        0.393        NaN   NaN\n10      8007 good       0.0714   0.736        0.193        Inf     0\nThere were 20 warnings (use warnings() to see them)\n> warnings()\nWarning messages:\n1: Problem while computing `test_stat = ...$statistic`.\nℹ Chi-squared approximation may be incorrect\nℹ The warning occurred in row 1.\n2: Problem while computing `test_stat = ...$statistic`.\nℹ Chi-squared approximation may be incorrect\nℹ The warning occurred in row 2.\n3: Problem while computing `test_stat = ...$statistic`.\nℹ Chi-squared approximation may be incorrect\nℹ The warning occurred in row 3.\n4: Problem while computing `test_stat = ...$statistic`.\nℹ Chi-squared approximation may be incorrect\nℹ The warning occurred in row 4.\n5: Problem while computing `test_stat = ...$statistic`.\nℹ Chi-squared approximation may be incorrect\nℹ The warning occurred in row 5.\n6: Problem while computing `test_stat = ...$statistic`.\nℹ Chi-squared approximation may be incorrect\nℹ The warning occurred in row 6.\n7: Problem while computing `test_stat = ...$statistic`.\nℹ Chi-squared approximation may be incorrect\nℹ The warning occurred in row 7.\n8: Problem while computing `test_stat = ...$statistic`.\nℹ Chi-squared approximation may be incorrect\nℹ The warning occurred in row 8.\n9: Problem while computing `test_stat = ...$statistic`.\nℹ Chi-squared approximation may be incorrect\nℹ The warning occurred in row 9.\n10: Problem while computing `test_stat = ...$statistic`.\nℹ Chi-squared approximation may be incorrect\nℹ The warning occurred in row 10.\n11: Problem while computing `p_val = ...$p.value`.\nℹ Chi-squared approximation may be incorrect\nℹ The warning occurred in row 1.\n12: Problem while computing `p_val = ...$p.value`.\nℹ Chi-squared approximation may be incorrect\nℹ The warning occurred in row 2.\n13: Problem while computing `p_val = ...$p.value`.\nℹ Chi-squared approximation may be incorrect\nℹ The warning occurred in row 3.\n14: Problem while computing `p_val = ...$p.value`.\nℹ Chi-squared approximation may be incorrect\nℹ The warning occurred in row 4.\n15: Problem while computing `p_val = ...$p.value`.\nℹ Chi-squared approximation may be incorrect\nℹ The warning occurred in row 5.\n16: Problem while computing `p_val = ...$p.value`.\nℹ Chi-squared approximation may be incorrect\nℹ The warning occurred in row 6.\n17: Problem while computing `p_val = ...$p.value`.\nℹ Chi-squared approximation may be incorrect\nℹ The warning occurred in row 7.\n18: Problem while computing `p_val = ...$p.value`.\nℹ Chi-squared approximation may be incorrect\nℹ The warning occurred in row 8.\n19: Problem while computing `p_val = ...$p.value`.\nℹ Chi-squared approximation may be incorrect\nℹ The warning occurred in row 9.\n20: Problem while computing `p_val = ...$p.value`.\nℹ Chi-squared approximation may be incorrect\nℹ The warning occurred in row 10.\n> ihc %>%\n+   rowwise() %>%\n+   mutate(\n+     test_stat = chisq.test(c(neg_mean, wk_mean, plus_one_mean), p = c(0.01, 0.98, 0.01))$s​‌​\ntatistic,\n+     p_val = chisq.test(c(neg_mean, wk_mean, plus_one_mean), p = c(0.01, 0.98, 0.01))$p.val​‌​\nue\n+   )\n# A tibble: 10 × 7\n# Rowwise:  animal_id\n   animal_id bev_resp neg_mean wk_mean plus_one_mean test_stat    p_val\n       <dbl> <chr>       <dbl>   <dbl>         <dbl>     <dbl>    <dbl>\n 1      2747 poor       0.0571   0.586        0.314      10.1  6.51e- 3\n 2      3132 poor       0        0.171        0.829      67.7  2.01e-15\n 3      3209 poor       0.0357   0.757        0.207       4.00 1.35e- 1\n 4      6451 poor       0.0214   0.25         0.629      43.1  4.33e-10\n 5      6495 poor       0        0.136        0.771      64.7  8.86e-15\n 6      6919 good       0.2      0.636        0.164       6.11 4.71e- 2\n 7      7244 good       0.136    0.821        0.0429      1.71 4.24e- 1\n 8      7436 good       0.107    0.75         0.143       2.76 2.51e- 1\n 9      7911 good       0        0.579        0.393      15.3  4.84e- 4\n10      8007 good       0.0714   0.736        0.193       3.78 1.51e- 1\nThere were 20 warnings (use warnings() to see them)\n>     test_stat = chisq.test(c(neg_mean, wk_mean, plus_one_mean), p = c(0.001, 0.998, 0.001)​‌​\n)$statistic,\nError: unexpected ',' in \"    test_stat = chisq.test(c(neg_mean, wk_mean, plus_one_mean), p ​‌​\n= c(0.001, 0.998, 0.001))$statistic,\"\n>     test_stat = chisq.test(c(neg_mean, wk_mean, plus_one_mean), p = c(0.01, 0.98, 0.01))$s​‌​\ntatistic,\nError: unexpected ',' in \"    test_stat = chisq.test(c(neg_mean, wk_mean, plus_one_mean), p ​‌​\n= c(0.01, 0.98, 0.01))$statistic,\"\n> 0, 1, 0\nError: unexpected ',' in \"0,\"\n>     test_stat = chisq.test(c(neg_mean, wk_mean, plus_one_mean), p = c(0.01, 0.98, 0.01))$s​‌​\ntatistic,\nError: unexpected ',' in \"    test_stat = chisq.test(c(neg_mean, wk_mean, plus_one_mean), p ​‌​\n= c(0.01, 0.98, 0.01))$statistic,\"\n>     test_stat = chisq.test(c(neg_mean, wk_mean, plus_one_mean), p = c(0, 1, 0))$statistic,\nError: unexpected ',' in \"    test_stat = chisq.test(c(neg_mean, wk_mean, plus_one_mean), p ​‌​\n= c(0, 1, 0))$statistic,\"\n> rawihc <- read_csv(\"./ihcraw.csv\")\nRows: 70 Columns: 14                                                          \n── Column specification ────────────────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (3): pdx_id, bev_resp, has_plus_two\ndbl (10): animal_id, field_n, neg, wk, plus_one, plus_two, sum, h_score, h_s...\nlgl  (1): staining_type\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n> ihc <- rawihc %>%\n+   group_by(animal_id, bev_resp) %>%\n+   summarise_at(vars(neg, wk, plus_one), list(mean = mean))\n> ihc %>%\n+   rowwise() %>%\n+   mutate(\n+     test_stat = chisq.test(c(neg_mean, wk_mean, plus_one_mean), p = c(0.01, 0.98, 0.01))$s​‌​\ntatistic,\n+     p_val = chisq.test(c(neg_mean, wk_mean, plus_one_mean), p = c(0.01, 0.98, 0.01))$p.val​‌​\nue\n+   )\n# A tibble: 10 × 7\n# Rowwise:  animal_id\n   animal_id bev_resp neg_mean wk_mean plus_one_mean test_stat    p_val\n       <dbl> <chr>       <dbl>   <dbl>         <dbl>     <dbl>    <dbl>\n 1      2747 poor       0.0571   0.586        0.314      10.1  6.51e- 3\n 2      3132 poor       0        0.171        0.829      67.7  2.01e-15\n 3      3209 poor       0.0357   0.757        0.207       4.00 1.35e- 1\n 4      6451 poor       0.0214   0.25         0.629      43.1  4.33e-10\n 5      6495 poor       0        0.136        0.771      64.7  8.86e-15\n 6      6919 good       0.2      0.636        0.164       6.11 4.71e- 2\n 7      7244 good       0.136    0.821        0.0429      1.71 4.24e- 1\n 8      7436 good       0.107    0.75         0.143       2.76 2.51e- 1\n 9      7911 good       0        0.579        0.393      15.3  4.84e- 4\n10      8007 good       0.0714   0.736        0.193       3.78 1.51e- 1\nThere were 20 warnings (use warnings() to see them)\n> rawihc <- read_csv(\"./ihcraw.csv\")\nRows: 70 Columns: 14                                                          \n── Column specification ────────────────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (3): pdx_id, bev_resp, has_plus_two\ndbl (10): animal_id, field_n, neg, wk, plus_one, plus_two, sum, h_score, h_s...\nlgl  (1): staining_type\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n> ihc <- rawihc %>%\n+   group_by(animal_id, bev_resp) %>%\n+   summarise_at(vars(neg, wk, plus_one), list(mean = mean))\n> ihc <- ihc %>%\n+   rowwise() %>%\n+   mutate(\n+     test_stat = chisq.test(c(neg_mean, wk_mean, plus_one_mean), p = c(0.01, 0.98, 0.01))$s​‌​\ntatistic,\n+     p_val = chisq.test(c(neg_mean, wk_mean, plus_one_mean), p = c(0.01, 0.98, 0.01))$p.val​‌​\nue\n+   )\nThere were 20 warnings (use warnings() to see them)\n> ihc$p_val                                                                                 \n [1] 6.507581e-03 2.008227e-15 1.351100e-01 4.326663e-10 8.855944e-15\n [6] 4.709069e-02 4.244281e-01 2.512322e-01 4.837706e-04 1.509273e-01\n> rawihc <- read_csv(\"./ihcraw.csv\")\nRows: 70 Columns: 14                                                          \n── Column specification ────────────────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (3): pdx_id, bev_resp, has_plus_two\ndbl (10): animal_id, field_n, neg, wk, plus_one, plus_two, sum, h_score, h_s...\nlgl  (1): staining_type\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n> ihc <- rawihc %>%\n+   group_by(animal_id, bev_resp) %>%\n+   summarise_at(vars(neg, wk, plus_one), list(mean = mean))\n> ihc <- ihc %>%\n+   rowwise() %>%\n+   mutate(\n+     test_stat = chisq.test(c(neg_mean, wk_mean, plus_one_mean), p = c(0.01, 0.98, 0.01))$s​‌​\ntatistic,\n+     p_val = chisq.test(c(neg_mean, wk_mean, plus_one_mean), p = c(0.01, 0.98, 0.01))$p.val​‌​\nue\n+   ) %>%\n+   mutate(significant = ifelse(p_val < 0.05, TRUE, FALSE))\nThere were 20 warnings (use warnings() to see them)\n> ihc\n# A tibble: 10 × 8\n# Rowwise:  animal_id\n   animal_id bev_resp neg_mean wk_mean plus_one_mean test_stat    p_val\n       <dbl> <chr>       <dbl>   <dbl>         <dbl>     <dbl>    <dbl>\n 1      2747 poor       0.0571   0.586        0.314      10.1  6.51e- 3\n 2      3132 poor       0        0.171        0.829      67.7  2.01e-15\n 3      3209 poor       0.0357   0.757        0.207       4.00 1.35e- 1\n 4      6451 poor       0.0214   0.25         0.629      43.1  4.33e-10\n 5      6495 poor       0        0.136        0.771      64.7  8.86e-15\n 6      6919 good       0.2      0.636        0.164       6.11 4.71e- 2\n 7      7244 good       0.136    0.821        0.0429      1.71 4.24e- 1\n 8      7436 good       0.107    0.75         0.143       2.76 2.51e- 1\n 9      7911 good       0        0.579        0.393      15.3  4.84e- 4\n10      8007 good       0.0714   0.736        0.193       3.78 1.51e- 1\n# … with 1 more variable: significant <lgl>\n> ihc <- ihc %>%\n+   rowwise() %>%\n+   mutate(\n+     test_stat = chisq.test(c(neg_mean, wk_mean, plus_one_mean), p = c(0.01, 0.98, 0.01))$s​‌​\ntatistic,\n+     p_val = chisq.test(c(neg_mean, wk_mean, plus_one_mean), p = c(0.01, 0.98, 0.01))$p.val​‌​\nue\n+   ) %>%\n+   mutate(significant = ifelse(p_val < 0.05, TRUE, FALSE))\nThere were 20 warnings (use warnings() to see them)\n> ihc\n# A tibble: 10 × 8\n# Rowwise: \n   animal_id bev_resp neg_mean wk_mean plus_one_mean test_stat    p_val\n       <dbl> <chr>       <dbl>   <dbl>         <dbl>     <dbl>    <dbl>\n 1      2747 poor       0.0571   0.586        0.314      10.1  6.51e- 3\n 2      3132 poor       0        0.171        0.829      67.7  2.01e-15\n 3      3209 poor       0.0357   0.757        0.207       4.00 1.35e- 1\n 4      6451 poor       0.0214   0.25         0.629      43.1  4.33e-10\n 5      6495 poor       0        0.136        0.771      64.7  8.86e-15\n 6      6919 good       0.2      0.636        0.164       6.11 4.71e- 2\n 7      7244 good       0.136    0.821        0.0429      1.71 4.24e- 1\n 8      7436 good       0.107    0.75         0.143       2.76 2.51e- 1\n 9      7911 good       0        0.579        0.393      15.3  4.84e- 4\n10      8007 good       0.0714   0.736        0.193       3.78 1.51e- 1\n# … with 1 more variable: significant <lgl>\n> ihc <- rawihc %>%\n+   group_by(animal_id, bev_resp) %>%\n+   summarise_at(vars(neg, wk, plus_one), list(mean = mean))\n> ihc <- ihc %>%\n+   rowwise() %>%\n+   mutate(\n+     test_stat = chisq.test(c(neg_mean, wk_mean, plus_one_mean), p = c(0.01, 0.98, 0.01))$s​‌​\ntatistic,\n+     p_val = chisq.test(c(neg_mean, wk_mean, plus_one_mean), p = c(0.01, 0.98, 0.01))$p.val​‌​\nue\n+   ) %>%\n+   mutate(significant = ifelse(p_val <= 0.05, \"yes\", \"no\"))\nThere were 20 warnings (use warnings() to see them)\n> ihc\n# A tibble: 10 × 8\n# Rowwise:  animal_id\n   animal_id bev_resp neg_mean wk_mean plus_one_mean test_stat    p_val\n       <dbl> <chr>       <dbl>   <dbl>         <dbl>     <dbl>    <dbl>\n 1      2747 poor       0.0571   0.586        0.314      10.1  6.51e- 3\n 2      3132 poor       0        0.171        0.829      67.7  2.01e-15\n 3      3209 poor       0.0357   0.757        0.207       4.00 1.35e- 1\n 4      6451 poor       0.0214   0.25         0.629      43.1  4.33e-10\n 5      6495 poor       0        0.136        0.771      64.7  8.86e-15\n 6      6919 good       0.2      0.636        0.164       6.11 4.71e- 2\n 7      7244 good       0.136    0.821        0.0429      1.71 4.24e- 1\n 8      7436 good       0.107    0.75         0.143       2.76 2.51e- 1\n 9      7911 good       0        0.579        0.393      15.3  4.84e- 4\n10      8007 good       0.0714   0.736        0.193       3.78 1.51e- 1\n# … with 1 more variable: significant <chr>\n> rawihc <- read_csv(\"./ihcraw.csv\")\nRows: 70 Columns: 14                                                          \n── Column specification ────────────────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (3): pdx_id, bev_resp, has_plus_two\ndbl (10): animal_id, field_n, neg, wk, plus_one, plus_two, sum, h_score, h_s...\nlgl  (1): staining_type\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n> ihc <- rawihc %>%\n+   group_by(animal_id, bev_resp) %>%\n+   summarise_at(vars(neg, wk, plus_one), list(mean = mean))\n> ihc <- ihc %>%\n+   rowwise() %>%\n+   mutate(\n+     test_stat = chisq.test(c(neg_mean, wk_mean, plus_one_mean), p = c(0.01, 0.98, 0.01))$s​‌​\ntatistic,\n+     p_val = chisq.test(c(neg_mean, wk_mean, plus_one_mean), p = c(0.01, 0.98, 0.01))$p.val​‌​\nue\n+   )\nThere were 20 warnings (use warnings() to see them)\n> rawihc <- read_csv(\"./ihcraw.csv\")\nRows: 70 Columns: 14                                                          \n── Column specification ────────────────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (3): pdx_id, bev_resp, has_plus_two\ndbl (10): animal_id, field_n, neg, wk, plus_one, plus_two, sum, h_score, h_s...\nlgl  (1): staining_type\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n> rawihc\n# A tibble: 70 × 14\n   pdx_id bev_resp staining_type animal_id field_n   neg    wk plus_one plus_two\n   <chr>  <chr>    <lgl>             <dbl>   <dbl> <dbl> <dbl>    <dbl>    <dbl>\n 1 g39    good     NA                 6919       1  0.1   0.7      0.2         0\n 2 g39    good     NA                 6919       2  0.1   0.7      0.2         0\n 3 g39    good     NA                 6919       3  0.25  0.6      0.15        0\n 4 g39    good     NA                 6919       4  0.25  0.6      0.15        0\n 5 g39    good     NA                 6919       5  0.15  0.7      0.15        0\n 6 g39    good     NA                 6919       6  0.25  0.65     0.1         0\n 7 g39    good     NA                 6919       7  0.3   0.5      0.2         0\n 8 g39    good     NA                 7244       1  0.15  0.8      0.05        0\n 9 g39    good     NA                 7244       2  0.1   0.85     0.05        0\n10 g39    good     NA                 7244       3  0.1   0.9      0           0\n# … with 60 more rows, and 5 more variables: has_plus_two <chr>, sum <dbl>,\n#   h_score <dbl>, h_score_alt <dbl>, rna_tpm <dbl>\n> c(rawihc$neg, rawihc$wk)                                                                  \n  [1] 0.10 0.10 0.25 0.25 0.15 0.25 0.30 0.15 0.10 0.10 0.20 0.10 0.20 0.10 0.10\n [16] 0.10 0.05 0.05 0.10 0.05 0.05 0.10 0.15 0.15 0.10 0.05 0.15 0.05 0.00 0.00\n [31] 0.00 0.00 0.00 0.00 0.00 0.10 0.10 0.05 0.05 0.00 0.00 0.10 0.00 0.00 0.00\n [46] 0.00 0.00 0.00 0.00 0.00 0.05 0.05 0.00 0.10 0.00 0.05 0.05 0.05 0.00 0.00\n [61] 0.00 0.05 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.70 0.70 0.60 0.60 0.70\n [76] 0.65 0.50 0.80 0.85 0.90 0.80 0.85 0.80 0.75 0.70 0.65 0.65 0.75 0.80 0.80\n [91] 0.80 0.80 0.75 0.65 0.80 0.70 0.75 0.80 0.55 0.50 0.60 0.65 0.65 0.60 0.50\n[106] 0.50 0.65 0.60 0.50 0.60 0.60 0.65 0.15 0.15 0.15 0.20 0.10 0.30 0.15 0.75\n[121] 0.75 0.70 0.85 0.70 0.75 0.80 0.55 0.45 0.20 0.15 0.10 0.10 0.20 0.40 0.10\n[136] 0.10 0.10 0.05 0.05 0.15\n> paste(rawihc$neg, rawihc$wk)\n [1] \"0.1 0.7\"   \"0.1 0.7\"   \"0.25 0.6\"  \"0.25 0.6\"  \"0.15 0.7\"  \"0.25 0.65\"\n [7] \"0.3 0.5\"   \"0.15 0.8\"  \"0.1 0.85\"  \"0.1 0.9\"   \"0.2 0.8\"   \"0.1 0.85\" \n[13] \"0.2 0.8\"   \"0.1 0.75\"  \"0.1 0.7\"   \"0.1 0.65\"  \"0.05 0.65\" \"0.05 0.75\"\n[19] \"0.1 0.8\"   \"0.05 0.8\"  \"0.05 0.8\"  \"0.1 0.8\"   \"0.15 0.75\" \"0.15 0.65\"\n[25] \"0.1 0.8\"   \"0.05 0.7\"  \"0.15 0.75\" \"0.05 0.8\"  \"0 0.55\"    \"0 0.5\"    \n[31] \"0 0.6\"     \"0 0.65\"    \"0 0.65\"    \"0 0.6\"     \"0 0.5\"     \"0.1 0.5\"  \n[37] \"0.1 0.65\"  \"0.05 0.6\"  \"0.05 0.5\"  \"0 0.6\"     \"0 0.6\"     \"0.1 0.65\" \n[43] \"0 0.15\"    \"0 0.15\"    \"0 0.15\"    \"0 0.2\"     \"0 0.1\"     \"0 0.3\"    \n[49] \"0 0.15\"    \"0 0.75\"    \"0.05 0.75\" \"0.05 0.7\"  \"0 0.85\"    \"0.1 0.7\"  \n[55] \"0 0.75\"    \"0.05 0.8\"  \"0.05 0.55\" \"0.05 0.45\" \"0 0.2\"     \"0 0.15\"   \n[61] \"0 0.1\"     \"0.05 0.1\"  \"0 0.2\"     \"0 0.4\"     \"0 0.1\"     \"0 0.1\"    \n[67] \"0 0.1\"     \"0 0.05\"    \"0 0.05\"    \"0 0.15\"   \n> rawihc %>% unite('temp', neg:wk)                                                          \n# A tibble: 70 × 13\n   pdx_id bev_resp staining_type animal_id field_n temp      plus_one plus_two\n   <chr>  <chr>    <lgl>             <dbl>   <dbl> <chr>        <dbl>    <dbl>\n 1 g39    good     NA                 6919       1 0.1_0.7       0.2         0\n 2 g39    good     NA                 6919       2 0.1_0.7       0.2         0\n 3 g39    good     NA                 6919       3 0.25_0.6      0.15        0\n 4 g39    good     NA                 6919       4 0.25_0.6      0.15        0\n 5 g39    good     NA                 6919       5 0.15_0.7      0.15        0\n 6 g39    good     NA                 6919       6 0.25_0.65     0.1         0\n 7 g39    good     NA                 6919       7 0.3_0.5       0.2         0\n 8 g39    good     NA                 7244       1 0.15_0.8      0.05        0\n 9 g39    good     NA                 7244       2 0.1_0.85      0.05        0\n10 g39    good     NA                 7244       3 0.1_0.9       0           0\n# … with 60 more rows, and 5 more variables: has_plus_two <chr>, sum <dbl>,\n#   h_score <dbl>, h_score_alt <dbl>, rna_tpm <dbl>\n> ihc\n# A tibble: 10 × 7\n# Rowwise:  animal_id\n   animal_id bev_resp neg_mean wk_mean plus_one_mean test_stat    p_val\n       <dbl> <chr>       <dbl>   <dbl>         <dbl>     <dbl>    <dbl>\n 1      2747 poor       0.0571   0.586        0.314      10.1  6.51e- 3\n 2      3132 poor       0        0.171        0.829      67.7  2.01e-15\n 3      3209 poor       0.0357   0.757        0.207       4.00 1.35e- 1\n 4      6451 poor       0.0214   0.25         0.629      43.1  4.33e-10\n 5      6495 poor       0        0.136        0.771      64.7  8.86e-15\n 6      6919 good       0.2      0.636        0.164       6.11 4.71e- 2\n 7      7244 good       0.136    0.821        0.0429      1.71 4.24e- 1\n 8      7436 good       0.107    0.75         0.143       2.76 2.51e- 1\n 9      7911 good       0        0.579        0.393      15.3  4.84e- 4\n10      8007 good       0.0714   0.736        0.193       3.78 1.51e- 1\n> ihc %>% gather(neg_mean, wk_mean)\n# A tibble: 50 × 2\n   neg_mean  wk_mean\n   <chr>     <chr>  \n 1 animal_id 2747   \n 2 animal_id 3132   \n 3 animal_id 3209   \n 4 animal_id 6451   \n 5 animal_id 6495   \n 6 animal_id 6919   \n 7 animal_id 7244   \n 8 animal_id 7436   \n 9 animal_id 7911   \n10 animal_id 8007   \n# … with 40 more rows\nWarning message:\nattributes are not identical across measure variables;\nthey will be dropped \n> lapply(1:nrow(ihc), function(x) ihc[x,3:5]))                                              \nError: unexpected ')' in \"lapply(1:nrow(ihc), function(x) ihc[x,3:5]))\"\n> lapply(1:nrow(ihc), function(x) ihc[x,3:5])                                               \n[[1]]\n# A tibble: 1 × 3\n# Rowwise: \n  neg_mean wk_mean plus_one_mean\n     <dbl>   <dbl>         <dbl>\n1   0.0571   0.586         0.314\n\n[[2]]\n# A tibble: 1 × 3\n# Rowwise: \n  neg_mean wk_mean plus_one_mean\n     <dbl>   <dbl>         <dbl>\n1        0   0.171         0.829\n\n[[3]]\n# A tibble: 1 × 3\n# Rowwise: \n  neg_mean wk_mean plus_one_mean\n     <dbl>   <dbl>         <dbl>\n1   0.0357   0.757         0.207\n\n[[4]]\n# A tibble: 1 × 3\n# Rowwise: \n  neg_mean wk_mean plus_one_mean\n     <dbl>   <dbl>         <dbl>\n1   0.0214    0.25         0.629\n\n[[5]]\n# A tibble: 1 × 3\n# Rowwise: \n  neg_mean wk_mean plus_one_mean\n     <dbl>   <dbl>         <dbl>\n1        0   0.136         0.771\n\n[[6]]\n# A tibble: 1 × 3\n# Rowwise: \n  neg_mean wk_mean plus_one_mean\n     <dbl>   <dbl>         <dbl>\n1      0.2   0.636         0.164\n\n[[7]]\n# A tibble: 1 × 3\n# Rowwise: \n  neg_mean wk_mean plus_one_mean\n     <dbl>   <dbl>         <dbl>\n1    0.136   0.821        0.0429\n\n[[8]]\n# A tibble: 1 × 3\n# Rowwise: \n  neg_mean wk_mean plus_one_mean\n     <dbl>   <dbl>         <dbl>\n1    0.107    0.75         0.143\n\n[[9]]\n# A tibble: 1 × 3\n# Rowwise: \n  neg_mean wk_mean plus_one_mean\n     <dbl>   <dbl>         <dbl>\n1        0   0.579         0.393\n\n[[10]]\n# A tibble: 1 × 3\n# Rowwise: \n  neg_mean wk_mean plus_one_mean\n     <dbl>   <dbl>         <dbl>\n1   0.0714   0.736         0.193\n\n> lapply(1:nrow(ihc), function(x) ihc[x,3:5])\n[[1]]\n# A tibble: 1 × 3\n# Rowwise: \n  neg_mean wk_mean plus_one_mean\n     <dbl>   <dbl>         <dbl>\n1   0.0571   0.586         0.314\n\n[[2]]\n# A tibble: 1 × 3\n# Rowwise: \n  neg_mean wk_mean plus_one_mean\n     <dbl>   <dbl>         <dbl>\n1        0   0.171         0.829\n\n[[3]]\n# A tibble: 1 × 3\n# Rowwise: \n  neg_mean wk_mean plus_one_mean\n     <dbl>   <dbl>         <dbl>\n1   0.0357   0.757         0.207\n\n[[4]]\n# A tibble: 1 × 3\n# Rowwise: \n  neg_mean wk_mean plus_one_mean\n     <dbl>   <dbl>         <dbl>\n1   0.0214    0.25         0.629\n\n[[5]]\n# A tibble: 1 × 3\n# Rowwise: \n  neg_mean wk_mean plus_one_mean\n     <dbl>   <dbl>         <dbl>\n1        0   0.136         0.771\n\n[[6]]\n# A tibble: 1 × 3\n# Rowwise: \n  neg_mean wk_mean plus_one_mean\n     <dbl>   <dbl>         <dbl>\n1      0.2   0.636         0.164\n\n[[7]]\n# A tibble: 1 × 3\n# Rowwise: \n  neg_mean wk_mean plus_one_mean\n     <dbl>   <dbl>         <dbl>\n1    0.136   0.821        0.0429\n\n[[8]]\n# A tibble: 1 × 3\n# Rowwise: \n  neg_mean wk_mean plus_one_mean\n     <dbl>   <dbl>         <dbl>\n1    0.107    0.75         0.143\n\n[[9]]\n# A tibble: 1 × 3\n# Rowwise: \n  neg_mean wk_mean plus_one_mean\n     <dbl>   <dbl>         <dbl>\n1        0   0.579         0.393\n\n[[10]]\n# A tibble: 1 × 3\n# Rowwise: \n  neg_mean wk_mean plus_one_mean\n     <dbl>   <dbl>         <dbl>\n1   0.0714   0.736         0.193\n\n> lapply(1:nrow(ihc), function(x) ihc[x,3:5])[1]                                            \n[[1]]\n# A tibble: 1 × 3\n# Rowwise: \n  neg_mean wk_mean plus_one_mean\n     <dbl>   <dbl>         <dbl>\n1   0.0571   0.586         0.314\n\n> lapply(1:nrow(ihc), function(x) ihc[x,3:5])[[1]]\n# A tibble: 1 × 3\n# Rowwise: \n  neg_mean wk_mean plus_one_mean\n     <dbl>   <dbl>         <dbl>\n1   0.0571   0.586         0.314\n> lapply(1:nrow(ihc), function(x) ihc[x,3:5])[.1]                                           \nlist()\n> lapply(1:nrow(ihc), function(x) ihc[x,3:5])[,1]                                           \nError in lapply(1:nrow(ihc), function(x) ihc[x, 3:5])[, 1] : \n  incorrect number of dimensions\n> lapply(1:nrow(ihc), function(x) ihc[x,3:5])[,0]                                           \nError in lapply(1:nrow(ihc), function(x) ihc[x, 3:5])[, 0] : \n  incorrect number of dimensions\n> lapply(1:nrow(ihc), function(x) ihc[x,3:5])[][1]                                          \n[[1]]\n# A tibble: 1 × 3\n# Rowwise: \n  neg_mean wk_mean plus_one_mean\n     <dbl>   <dbl>         <dbl>\n1   0.0571   0.586         0.314\n\n> lapply(1:nrow(ihc), function(x) ihc[x,3:5])[][:1]\nError: unexpected ':' in \"lapply(1:nrow(ihc), function(x) ihc[x,3:5])[][:\"\n> lapply(1:nrow(ihc), function(x) ihc[x,3:5])                                               \n[[1]]\n# A tibble: 1 × 3\n# Rowwise: \n  neg_mean wk_mean plus_one_mean\n     <dbl>   <dbl>         <dbl>\n1   0.0571   0.586         0.314\n\n[[2]]\n# A tibble: 1 × 3\n# Rowwise: \n  neg_mean wk_mean plus_one_mean\n     <dbl>   <dbl>         <dbl>\n1        0   0.171         0.829\n\n[[3]]\n# A tibble: 1 × 3\n# Rowwise: \n  neg_mean wk_mean plus_one_mean\n     <dbl>   <dbl>         <dbl>\n1   0.0357   0.757         0.207\n\n[[4]]\n# A tibble: 1 × 3\n# Rowwise: \n  neg_mean wk_mean plus_one_mean\n     <dbl>   <dbl>         <dbl>\n1   0.0214    0.25         0.629\n\n[[5]]\n# A tibble: 1 × 3\n# Rowwise: \n  neg_mean wk_mean plus_one_mean\n     <dbl>   <dbl>         <dbl>\n1        0   0.136         0.771\n\n[[6]]\n# A tibble: 1 × 3\n# Rowwise: \n  neg_mean wk_mean plus_one_mean\n     <dbl>   <dbl>         <dbl>\n1      0.2   0.636         0.164\n\n[[7]]\n# A tibble: 1 × 3\n# Rowwise: \n  neg_mean wk_mean plus_one_mean\n     <dbl>   <dbl>         <dbl>\n1    0.136   0.821        0.0429\n\n[[8]]\n# A tibble: 1 × 3\n# Rowwise: \n  neg_mean wk_mean plus_one_mean\n     <dbl>   <dbl>         <dbl>\n1    0.107    0.75         0.143\n\n[[9]]\n# A tibble: 1 × 3\n# Rowwise: \n  neg_mean wk_mean plus_one_mean\n     <dbl>   <dbl>         <dbl>\n1        0   0.579         0.393\n\n[[10]]\n# A tibble: 1 × 3\n# Rowwise: \n  neg_mean wk_mean plus_one_mean\n     <dbl>   <dbl>         <dbl>\n1   0.0714   0.736         0.193\n\n> lapply(1:nrow(ihc), function(x) ihc[x,3:5])$\n+ as\nNULL\n> lapply(1:nrow(ihc), function(x) ihc[x,3:5])$neg_mean\nNULL\n> temp <- lapply(1:nrow(mtcars), function(x) as.numeric(mtcars[x,2:8])apply(1:nrow(ihc), fun​‌​\nction(x) ihc[x,3:5])\nError: unexpected symbol in \"temp <- lapply(1:nrow(mtcars), function(x) as.numeric(mtcars[x,​‌​\n2:8])apply\"\n> temp <- apply(1:nrow(ihc), function(x) ihc[x,3:5])\nError in match.fun(FUN) : argument \"FUN\" is missing, with no default\n> temp <- lapply(1:nrow(ihc), function(x) ihc[x,3:5])\n> temp\n[[1]]\n# A tibble: 1 × 3\n# Rowwise: \n  neg_mean wk_mean plus_one_mean\n     <dbl>   <dbl>         <dbl>\n1   0.0571   0.586         0.314\n\n[[2]]\n# A tibble: 1 × 3\n# Rowwise: \n  neg_mean wk_mean plus_one_mean\n     <dbl>   <dbl>         <dbl>\n1        0   0.171         0.829\n\n[[3]]\n# A tibble: 1 × 3\n# Rowwise: \n  neg_mean wk_mean plus_one_mean\n     <dbl>   <dbl>         <dbl>\n1   0.0357   0.757         0.207\n\n[[4]]\n# A tibble: 1 × 3\n# Rowwise: \n  neg_mean wk_mean plus_one_mean\n     <dbl>   <dbl>         <dbl>\n1   0.0214    0.25         0.629\n\n[[5]]\n# A tibble: 1 × 3\n# Rowwise: \n  neg_mean wk_mean plus_one_mean\n     <dbl>   <dbl>         <dbl>\n1        0   0.136         0.771\n\n[[6]]\n# A tibble: 1 × 3\n# Rowwise: \n  neg_mean wk_mean plus_one_mean\n     <dbl>   <dbl>         <dbl>\n1      0.2   0.636         0.164\n\n[[7]]\n# A tibble: 1 × 3\n# Rowwise: \n  neg_mean wk_mean plus_one_mean\n     <dbl>   <dbl>         <dbl>\n1    0.136   0.821        0.0429\n\n[[8]]\n# A tibble: 1 × 3\n# Rowwise: \n  neg_mean wk_mean plus_one_mean\n     <dbl>   <dbl>         <dbl>\n1    0.107    0.75         0.143\n\n[[9]]\n# A tibble: 1 × 3\n# Rowwise: \n  neg_mean wk_mean plus_one_mean\n     <dbl>   <dbl>         <dbl>\n1        0   0.579         0.393\n\n[[10]]\n# A tibble: 1 × 3\n# Rowwise: \n  neg_mean wk_mean plus_one_mean\n     <dbl>   <dbl>         <dbl>\n1   0.0714   0.736         0.193\n\n> temp[1]\n[[1]]\n# A tibble: 1 × 3\n# Rowwise: \n  neg_mean wk_mean plus_one_mean\n     <dbl>   <dbl>         <dbl>\n1   0.0571   0.586         0.314\n\n> temp[1][1]\n[[1]]\n# A tibble: 1 × 3\n# Rowwise: \n  neg_mean wk_mean plus_one_mean\n     <dbl>   <dbl>         <dbl>\n1   0.0571   0.586         0.314\n\n> temp[1, 0[1]                                                                              \n+ temp[1, 0[1]\nError: unexpected symbol in:\n\"temp[1, 0[1]\ntemp\"\n> temp[1,1]                                                                                 \nError in temp[1, 1] : incorrect number of dimensions\n> temp[1,0]                                                                                 \nError in temp[1, 0] : incorrect number of dimensions\n> dim(temp)\nNULL\n> length(temp)\n[1] 10\n> ihc$temp <- temp\n> ihc\n# A tibble: 10 × 8\n# Rowwise:  animal_id\n   animal_id bev_resp neg_mean wk_mean plus_one_mean test_stat    p_val\n       <dbl> <chr>       <dbl>   <dbl>         <dbl>     <dbl>    <dbl>\n 1      2747 poor       0.0571   0.586        0.314      10.1  6.51e- 3\n 2      3132 poor       0        0.171        0.829      67.7  2.01e-15\n 3      3209 poor       0.0357   0.757        0.207       4.00 1.35e- 1\n 4      6451 poor       0.0214   0.25         0.629      43.1  4.33e-10\n 5      6495 poor       0        0.136        0.771      64.7  8.86e-15\n 6      6919 good       0.2      0.636        0.164       6.11 4.71e- 2\n 7      7244 good       0.136    0.821        0.0429      1.71 4.24e- 1\n 8      7436 good       0.107    0.75         0.143       2.76 2.51e- 1\n 9      7911 good       0        0.579        0.393      15.3  4.84e- 4\n10      8007 good       0.0714   0.736        0.193       3.78 1.51e- 1\n# … with 1 more variable: temp <list>\n> ihc2 <- ihc                                                                               \n> ihc2$test <- temp                                                                         \n> ihc2$temp\n[[1]]\n# A tibble: 1 × 3\n# Rowwise: \n  neg_mean wk_mean plus_one_mean\n     <dbl>   <dbl>         <dbl>\n1   0.0571   0.586         0.314\n\n[[2]]\n# A tibble: 1 × 3\n# Rowwise: \n  neg_mean wk_mean plus_one_mean\n     <dbl>   <dbl>         <dbl>\n1        0   0.171         0.829\n\n[[3]]\n# A tibble: 1 × 3\n# Rowwise: \n  neg_mean wk_mean plus_one_mean\n     <dbl>   <dbl>         <dbl>\n1   0.0357   0.757         0.207\n\n[[4]]\n# A tibble: 1 × 3\n# Rowwise: \n  neg_mean wk_mean plus_one_mean\n     <dbl>   <dbl>         <dbl>\n1   0.0214    0.25         0.629\n\n[[5]]\n# A tibble: 1 × 3\n# Rowwise: \n  neg_mean wk_mean plus_one_mean\n     <dbl>   <dbl>         <dbl>\n1        0   0.136         0.771\n\n[[6]]\n# A tibble: 1 × 3\n# Rowwise: \n  neg_mean wk_mean plus_one_mean\n     <dbl>   <dbl>         <dbl>\n1      0.2   0.636         0.164\n\n[[7]]\n# A tibble: 1 × 3\n# Rowwise: \n  neg_mean wk_mean plus_one_mean\n     <dbl>   <dbl>         <dbl>\n1    0.136   0.821        0.0429\n\n[[8]]\n# A tibble: 1 × 3\n# Rowwise: \n  neg_mean wk_mean plus_one_mean\n     <dbl>   <dbl>         <dbl>\n1    0.107    0.75         0.143\n\n[[9]]\n# A tibble: 1 × 3\n# Rowwise: \n  neg_mean wk_mean plus_one_mean\n     <dbl>   <dbl>         <dbl>\n1        0   0.579         0.393\n\n[[10]]\n# A tibble: 1 × 3\n# Rowwise: \n  neg_mean wk_mean plus_one_mean\n     <dbl>   <dbl>         <dbl>\n1   0.0714   0.736         0.193\n\n> ihc2                                                                                      \n# A tibble: 10 × 9\n# Rowwise:  animal_id\n   animal_id bev_resp neg_mean wk_mean plus_one_mean test_stat    p_val\n       <dbl> <chr>       <dbl>   <dbl>         <dbl>     <dbl>    <dbl>\n 1      2747 poor       0.0571   0.586        0.314      10.1  6.51e- 3\n 2      3132 poor       0        0.171        0.829      67.7  2.01e-15\n 3      3209 poor       0.0357   0.757        0.207       4.00 1.35e- 1\n 4      6451 poor       0.0214   0.25         0.629      43.1  4.33e-10\n 5      6495 poor       0        0.136        0.771      64.7  8.86e-15\n 6      6919 good       0.2      0.636        0.164       6.11 4.71e- 2\n 7      7244 good       0.136    0.821        0.0429      1.71 4.24e- 1\n 8      7436 good       0.107    0.75         0.143       2.76 2.51e- 1\n 9      7911 good       0        0.579        0.393      15.3  4.84e- 4\n10      8007 good       0.0714   0.736        0.193       3.78 1.51e- 1\n# … with 2 more variables: temp <list>, test <list>\n> ihc2 %>% select(-c(\"neg_mean\", \"wk_mean\")                                                 \n+ )\n# A tibble: 10 × 7\n# Rowwise:  animal_id\n   animal_id bev_resp plus_one_mean test_stat    p_val temp         test        \n       <dbl> <chr>            <dbl>     <dbl>    <dbl> <list>       <list>      \n 1      2747 poor            0.314      10.1  6.51e- 3 <rowwise_df> <rowwise_df>\n 2      3132 poor            0.829      67.7  2.01e-15 <rowwise_df> <rowwise_df>\n 3      3209 poor            0.207       4.00 1.35e- 1 <rowwise_df> <rowwise_df>\n 4      6451 poor            0.629      43.1  4.33e-10 <rowwise_df> <rowwise_df>\n 5      6495 poor            0.771      64.7  8.86e-15 <rowwise_df> <rowwise_df>\n 6      6919 good            0.164       6.11 4.71e- 2 <rowwise_df> <rowwise_df>\n 7      7244 good            0.0429      1.71 4.24e- 1 <rowwise_df> <rowwise_df>\n 8      7436 good            0.143       2.76 2.51e- 1 <rowwise_df> <rowwise_df>\n 9      7911 good            0.393      15.3  4.84e- 4 <rowwise_df> <rowwise_df>\n10      8007 good            0.193       3.78 1.51e- 1 <rowwise_df> <rowwise_df>\n> rawihc <- read_csv(\"./ihcraw.csv\")\nRows: 70 Columns: 14                                                          \n── Column specification ────────────────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (3): pdx_id, bev_resp, has_plus_two\ndbl (10): animal_id, field_n, neg, wk, plus_one, plus_two, sum, h_score, h_s...\nlgl  (1): staining_type\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n> ihc <- rawihc %>%\n+   group_by(animal_id, bev_resp) %>%\n+   summarise_at(vars(neg, wk, plus_one), list(mean = mean))\n> ihc <- ihc %>%\n+   rowwise() %>%\n+   mutate(\n+     test_stat = chisq.test(c(neg_mean, wk_mean, plus_one_mean), p = c(0.01, 0.98, 0.01))$s​‌​\ntatistic,\n+     p_val = chisq.test(c(neg_mean, wk_mean, plus_one_mean), p = c(0.01, 0.98, 0.01))$p.val​‌​\nue\n+   )\nThere were 20 warnings (use warnings() to see them)\n> rawihc <- read_csv(\"./ihcraw.csv\")\nRows: 70 Columns: 14                                                          \n── Column specification ────────────────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (3): pdx_id, bev_resp, has_plus_two\ndbl (10): animal_id, field_n, neg, wk, plus_one, plus_two, sum, h_score, h_s...\nlgl  (1): staining_type\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n> ihc <- rawihc %>%\n+   group_by(animal_id, bev_resp) %>%\n+   summarise_at(vars(neg, wk, plus_one), list(mean = mean))\n> ihc\n# A tibble: 10 × 5\n# Groups:   animal_id [10]\n   animal_id bev_resp neg_mean wk_mean plus_one_mean\n       <dbl> <chr>       <dbl>   <dbl>         <dbl>\n 1      2747 poor       0.0571   0.586        0.314 \n 2      3132 poor       0        0.171        0.829 \n 3      3209 poor       0.0357   0.757        0.207 \n 4      6451 poor       0.0214   0.25         0.629 \n 5      6495 poor       0        0.136        0.771 \n 6      6919 good       0.2      0.636        0.164 \n 7      7244 good       0.136    0.821        0.0429\n 8      7436 good       0.107    0.75         0.143 \n 9      7911 good       0        0.579        0.393 \n10      8007 good       0.0714   0.736        0.193 \n> write_csvwrite_csv(ihc, \"./ihc.csv\")\nError in write_csvwrite_csv(ihc, \"./ihc.csv\") : \n  could not find function \"write_csvwrite_csv\"\n> write.csv(ihc, \"./ihc.csv\")\n> ihc <- read_csv(\"./ihc.csv\")\nNew names:                                                                    \n• `` -> `...1`\nRows: 10 Columns: 6\n── Column specification ────────────────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): bev_resp\ndbl (5): ...1, animal_id, neg_mean, wk_mean, plus_one_mean\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n> ihc\n# A tibble: 10 × 6\n    ...1 animal_id bev_resp neg_mean wk_mean plus_one_mean\n   <dbl>     <dbl> <chr>       <dbl>   <dbl>         <dbl>\n 1     1      2747 poor        0.586   0.314        0.0571\n 2     2      3132 poor        0.829   0.171        0     \n 3     3      3209 poor        0.757   0.207        0.0357\n 4     4      6451 poor        0.629   0.25         0.0214\n 5     5      6495 poor        0.771   0.136        0     \n 6     6      6919 good        0.636   0.2          0.164 \n 7     7      7244 good        0.821   0.136        0.0429\n 8     8      7436 good        0.75    0.143        0.107 \n 9     9      7911 good        0.579   0.393        0     \n10    10      8007 good        0.736   0.193        0.0714\n> sortedihc <- read_csv(\"./ihc.csv\")\nNew names:                                                                    \n• `` -> `...1`\nRows: 10 Columns: 6\n── Column specification ────────────────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): bev_resp\ndbl (5): ...1, animal_id, neg_mean, wk_mean, plus_one_mean\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n> sortedihc <- read_csv(\"./ihc.csv\")\nNew names:                                                                    \n• `` -> `...1`\nRows: 10 Columns: 6\n── Column specification ────────────────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): bev_resp\ndbl (5): ...1, animal_id, neg_mean, wk_mean, plus_one_mean\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n> sortedihc <- sortedihc %>%\n+   rowwise() %>%\n+   mutate(\n+     test_stat = chisq.test(c(neg_mean, wk_mean, plus_one_mean), p = c(0.01, 0.98, 0.01))$s​‌​\ntatistic,\n+     p_val = chisq.test(c(neg_mean, wk_mean, plus_one_mean), p = c(0.01, 0.98, 0.01))$p.val​‌​\nue\n+   )\nsortedihc\nThere were 20 warnings (use warnings() to see them)\n> sortedihc\n# A tibble: 10 × 8\n# Rowwise: \n    ...1 animal_id bev_resp neg_mean wk_mean plus_one_mean test_stat    p_val\n   <dbl>     <dbl> <chr>       <dbl>   <dbl>         <dbl>     <dbl>    <dbl>\n 1     1      2747 poor        0.586   0.314        0.0571      35.3 2.13e- 8\n 2     2      3132 poor        0.829   0.171        0           67.7 2.01e-15\n 3     3      3209 poor        0.757   0.207        0.0357      56.5 5.39e-13\n 4     4      6451 poor        0.629   0.25         0.0214      43.1 4.33e-10\n 5     5      6495 poor        0.771   0.136        0           64.7 8.86e-15\n 6     6      6919 good        0.636   0.2          0.164       42.2 7.02e-10\n 7     7      7244 good        0.821   0.136        0.0429      66.7 3.32e-15\n 8     8      7436 good        0.75    0.143        0.107       56.4 5.61e-13\n 9     9      7911 good        0.579   0.393        0           33.6 4.93e- 8\n10    10      8007 good        0.736   0.193        0.0714      53.7 2.21e-12\n> sortedihc <- read_csv(\"./ihc.csv\")\nNew names:                                                                    \n• `` -> `...1`\nRows: 10 Columns: 6\n── Column specification ────────────────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): bev_resp\ndbl (5): ...1, animal_id, neg_mean, wk_mean, plus_one_mean\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n> sortedihc <- sortedihc %>%\n+   rowwise() %>%\n+   mutate(\n+     test_stat = chisq.test(c(neg_mean, wk_mean, plus_one_mean), p = c(1, 0, 0))$statistic,\n+     p_val = chisq.test(c(neg_mean, wk_mean, plus_one_mean), p = c(1, 0, 0))$p.value\n+   )\nThere were 20 warnings (use warnings() to see them)\n> sortedihc\n# A tibble: 10 × 8\n# Rowwise: \n    ...1 animal_id bev_resp neg_mean wk_mean plus_one_mean test_stat p_val\n   <dbl>     <dbl> <chr>       <dbl>   <dbl>         <dbl>     <dbl> <dbl>\n 1     1      2747 poor        0.586   0.314        0.0571       Inf     0\n 2     2      3132 poor        0.829   0.171        0            NaN   NaN\n 3     3      3209 poor        0.757   0.207        0.0357       Inf     0\n 4     4      6451 poor        0.629   0.25         0.0214       Inf     0\n 5     5      6495 poor        0.771   0.136        0            NaN   NaN\n 6     6      6919 good        0.636   0.2          0.164        Inf     0\n 7     7      7244 good        0.821   0.136        0.0429       Inf     0\n 8     8      7436 good        0.75    0.143        0.107        Inf     0\n 9     9      7911 good        0.579   0.393        0            NaN   NaN\n10    10      8007 good        0.736   0.193        0.0714       Inf     0\n> sortedihc <- read_csv(\"./ihc.csv\")\nNew names:                                                                    \n• `` -> `...1`\nRows: 10 Columns: 6\n── Column specification ────────────────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): bev_resp\ndbl (5): ...1, animal_id, neg_mean, wk_mean, plus_one_mean\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n> sortedihc <- sortedihc %>%\n+   rowwise() %>%\n+   mutate(\n+     test_stat = chisq.test(c(neg_mean, wk_mean, plus_one_mean), p = c(.98, 0.01, 0.01))$st​‌​\natistic,\n+     p_val = chisq.test(c(neg_mean, wk_mean, plus_one_mean), p = c(.98, 0.01, 0.01))$p.valu​‌​\ne\n+   )\nThere were 20 warnings (use warnings() to see them)\n> sortedihc\n# A tibble: 10 × 8\n# Rowwise: \n    ...1 animal_id bev_resp neg_mean wk_mean plus_one_mean test_stat    p_val\n   <dbl>     <dbl> <chr>       <dbl>   <dbl>         <dbl>     <dbl>    <dbl>\n 1     1      2747 poor        0.586   0.314        0.0571     10.1  0.00651 \n 2     2      3132 poor        0.829   0.171        0           2.64 0.267   \n 3     3      3209 poor        0.757   0.207        0.0357      4.00 0.135   \n 4     4      6451 poor        0.629   0.25         0.0214      6.54 0.0379  \n 5     5      6495 poor        0.771   0.136        0           1.79 0.408   \n 6     6      6919 good        0.636   0.2          0.164       6.11 0.0471  \n 7     7      7244 good        0.821   0.136        0.0429      1.71 0.424   \n 8     8      7436 good        0.75    0.143        0.107       2.76 0.251   \n 9     9      7911 good        0.579   0.393        0          15.3  0.000484\n10    10      8007 good        0.736   0.193        0.0714      3.78 0.151   \n> ihc %>% ihc\nError in ihc(.) : could not find function \"ihc\"\n> rawihc <- read_csv(\"./ihcraw.csv\")\nRows: 70 Columns: 14                                                          \n── Column specification ────────────────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (3): pdx_id, bev_resp, has_plus_two\ndbl (10): animal_id, field_n, neg, wk, plus_one, plus_two, sum, h_score, h_s...\nlgl  (1): staining_type\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n> ihc <- rawihc %>%\n+   group_by(animal_id, bev_resp) %>%\n+   summarise_at(vars(neg, wk, plus_one), list(mean = mean))\n> ihc %>% ihc\nError in ihc(.) : could not find function \"ihc\"\n> ihc %>% ihc %>%\n+   rowwise() %>%\n+   mutate(\n+     test_stat = chisq.test(c(neg_mean, wk_mean, plus_one_mean))$statistic,\n+     p_val = chisq.test(c(neg_mean, wk_mean, plus_one_mean))$p.value\n+   )\nError in ihc(.) : could not find function \"ihc\"\n> ihc %>%\n+   rowwise() %>%\n+   mutate(\n+     test_stat = chisq.test(c(neg_mean, wk_mean, plus_one_mean))$statistic,\n+     p_val = chisq.test(c(neg_mean, wk_mean, plus_one_mean))$p.value\n+   )\n# A tibble: 10 × 7\n# Rowwise:  animal_id\n   animal_id bev_resp neg_mean wk_mean plus_one_mean test_stat p_val\n       <dbl> <chr>       <dbl>   <dbl>         <dbl>     <dbl> <dbl>\n 1      2747 poor       0.0571   0.586        0.314      0.438 0.803\n 2      3132 poor       0        0.171        0.829      1.15  0.563\n 3      3209 poor       0.0357   0.757        0.207      0.852 0.653\n 4      6451 poor       0.0214   0.25         0.629      0.627 0.731\n 5      6495 poor       0        0.136        0.771      1.12  0.571\n 6      6919 good       0.2      0.636        0.164      0.413 0.813\n 7      7244 good       0.136    0.821        0.0429     1.08  0.581\n 8      7436 good       0.107    0.75         0.143      0.783 0.676\n 9      7911 good       0        0.579        0.393      0.539 0.764\n10      8007 good       0.0714   0.736        0.193      0.751 0.687\nThere were 20 warnings (use warnings() to see them)\n> sig <- ihc %>%\n+   rowwise() %>%\n+   mutate(\n+     test_stat = chisq.test(c(neg_mean, wk_mean, plus_one_mean))$statistic,\n+     p_val = chisq.test(c(neg_mean, wk_mean, plus_one_mean))$p.value\n+   )\nThere were 20 warnings (use warnings() to see them)\n> write.csv(sig, \"ihc.csv\")\n> q()\nSave workspace image? [y/n/c]: n\nroshanlodha@Roshans-MacBook-Air ihc % clear                                                 \nroshanlodha@Roshans-MacBook-Air ihc % pkgs <- c(\"UCSCXenaTools\", \"dplyr\", \"survival\", \"survm​‌​\niner\", \"ggbreak\", \"ggprism\", \"svglite\")                                                     \nzsh: unknown file attribute: C                                                 \nroshanlodha@Roshans-MacBook-Air ihc % R                                                     \n\nR version 4.2.0 (2022-04-22) -- \"Vigorous Calisthenics\"                \nCopyright (C) 2022 The R Foundation for Statistical Computing                    \nPlatform: x86_64-apple-darwin21.3.0 (64-bit)\n                                     \nR is free software and comes with ABSOLUTELY NO WARRANTY.   \nYou are welcome to redistribute it under certain conditions.\nType 'license()' or 'licence()' for distribution details.\n                 \n  Natural language support but running in an English locale\n           \nR is a collaborative project with many contributors.                        \nType 'contributors()' for more information and                       \n'citation()' on how to cite R or R packages in publications.\n                                               \nType 'demo()' for some demos, 'help()' for on-line help, or\n'help.start()' for an HTML browser interface to help.\nType 'q()' to quit R.\n                                                                            \n> q()                                                                \nSave workspace image? [y/n/c]: n\nroshanlodha@Roshans-MacBook-Air ihc % clear                                                 \nroshanlodha@Roshans-MacBook-Air ihc % cd ../survival.R                                      \ncd: no such file or directory: ../survival.R                                                \nroshanlodha@Roshans-MacBook-Air ihc % cd ../survival                                        \nroshanlodha@Roshans-MacBook-Air survival % clear                                            \nroshanlodha@Roshans-MacBook-Air survival % ls                                               \nRplots.pdf      survival.R                                                                  \nroshanlodha@Roshans-MacBook-Air survival % R                                                \n                                                                                            \nR version 4.2.0 (2022-04-22) -- \"Vigorous Calisthenics\"\nCopyright (C) 2022 The R Foundation for Statistical Computing          \nPlatform: x86_64-apple-darwin21.3.0 (64-bit)                                     \n                                            \nR is free software and comes with ABSOLUTELY NO WARRANTY.\nYou are welcome to redistribute it under certain conditions.\nType 'license()' or 'licence()' for distribution details.   \n                                                         \n  Natural language support but running in an English locale\n                                                           \nR is a collaborative project with many contributors.\nType 'contributors()' for more information and                              \n'citation()' on how to cite R or R packages in publications.         \n                                                            \nType 'demo()' for some demos, 'help()' for on-line help, or\n'help.start()' for an HTML browser interface to help.      \nType 'q()' to quit R.                                \n                     \n> pkgs <- c(\"UCSCXenaTools\", \"dplyr\", \"survival\", \"survminer\", \"ggbreak\", \"ggprism\", \"svglit​‌​\ne\")                                                                  \n> invisible(lapply(pkgs, function (x) suppressMessages(library(x, character.only = T))))\n> clear                                                                                     \nError: object 'clear' not found\n> gbm_cohort = XenaData %>%                                         \n+   filter(XenaHostNames == \"tcgaHub\") %>%                          \n+   XenaScan(\"TCGA Glioblastoma\") # microarray dataset, CNVA dataset DNA level\n> cli_query = gbm_cohort %>%                                        \n+   filter(DataSubtype == \"phenotype\") %>% # select clinical dataset\n+ XenaGenerate() %>% # generate a XenaHub object                    \n+ XenaQuery() %>%                                                   \n+   XenaDownload()                                                  \nThis will check url status, please be patient.                      \nAll downloaded files will under directory /var/folders/pp/h4y81_ks18151db6zm3qgnv80000gn/T//​‌​\nRtmpXoPYTa.                                                         \nThe 'trans_slash' option is FALSE, keep same directory structure as Xena.\nCreating directories for datasets...               \nDownloading TCGA.GBM.sampleMap/GBM_clinicalMatrix\ntrying URL 'https://tcga.xenahubs.net/download/TCGA.GBM.sampleMap/GBM_clinicalMatrix'\nContent type 'binary/octet-stream' length 610062 bytes (595 KB)\n=cli = XenaPrepare(cli_query)                                               \n=================================================                    \ndownloaded 595 KB\n                                                   \nDownloading survival/GBM_survival.txt\ntrying URL 'https://tcga.xenahubs.net/download/survival/GBM_survival.txt'\nContent type 'text/plain' length 29953 bytes (29 KB)\n==================================================                                          \ndownloaded 29 KB\n\n> cli = XenaPrepare(cli_query)\nhead(cli)\n                                                                                            ​‌​\n                                                                                            ​‌​\n> head(cli)            \n$GBM_clinicalMatrix\n# A tibble: 629 × 129\n   sampleID        CDE_DxAge CDE_alk_chemorad… CDE_chemo_adjuv… CDE_chemo_adjuv…\n   <chr>               <dbl> <lgl>             <lgl>            <lgl>           \n 1 TCGA-02-0001-01      44.3 FALSE             FALSE            FALSE           \n 2 TCGA-02-0002-01      NA   NA                NA               NA              \n 3 TCGA-02-0003-01      50.2 FALSE             FALSE            FALSE           \n 4 TCGA-02-0004-01      59.2 TRUE              TRUE             TRUE            \n 5 TCGA-02-0006-01      56.2 FALSE             TRUE             TRUE            \n 6 TCGA-02-0007-01      40.5 TRUE              TRUE             TRUE            \n 7 TCGA-02-0009-01      61.5 FALSE             FALSE            FALSE           \n 8 TCGA-02-0010-01      20.4 FALSE             TRUE             TRUE            \n 9 TCGA-02-0011-01      19.0 TRUE              TRUE             TRUE            \n10 TCGA-02-0014-01      25.6 FALSE             FALSE            FALSE           \n# … with 619 more rows, and 124 more variables: CDE_chemo_alk <lgl>,\n#   CDE_chemo_alk_days <dbl>, CDE_chemo_alk_long <lgl>, CDE_chemo_tmz <lgl>,\n#   CDE_chemo_tmz_days <dbl>, CDE_chemo_tmz_long <lgl>, CDE_missing <chr>,\n#   CDE_missingflag <lgl>, CDE_previously_treated <lgl>,\n#   CDE_radiation_adjuvant <lgl>, CDE_radiation_adjuvant_standard <lgl>,\n#   CDE_radiation_adjuvant_standard_probable <lgl>, CDE_radiation_any <lgl>,\n#   CDE_radiation_standard <lgl>, CDE_radiation_standard_probable <lgl>, …\n\n$GBM_survival.txt\n# A tibble: 602 × 11\n   sample  `_PATIENT`    OS OS.time   DSS DSS.time   DFI DFI.time   PFI PFI.time\n   <chr>   <chr>      <dbl>   <dbl> <dbl>    <dbl> <dbl>    <dbl> <dbl>    <dbl>\n 1 TCGA-0… TCGA-02-0…     1     358     1      358    NA       NA     1      137\n 2 TCGA-0… TCGA-02-0…     1     144     1      144    NA       NA     1       40\n 3 TCGA-0… TCGA-02-0…     1     558     1      558    NA       NA     1      302\n 4 TCGA-0… TCGA-02-0…     1     705     1      705    NA       NA     1      518\n 5 TCGA-0… TCGA-02-0…     1     322     1      322    NA       NA     1      264\n 6 TCGA-0… TCGA-02-0…     1    1077     1     1077    NA       NA     1      351\n 7 TCGA-0… TCGA-02-0…     1     630     1      630    NA       NA     1      145\n 8 TCGA-0… TCGA-02-0…     1    2512     1     2512    NA       NA     1     2243\n 9 TCGA-0… TCGA-02-0…     1     627     1      627    NA       NA     1      456\n10 TCGA-0… TCGA-02-0…     1    2648     1     2648    NA       NA     1     1699\n# … with 592 more rows, and 1 more variable: Redaction <lgl>\n\n> ge = gbm_cohort %>%\n+   filter(DataSubtype == \"gene expression RNAseq\", Label == \"IlluminaHiSeq\")\n> EGR3 = fetch_dense_values(host = ge$XenaHosts,\n+   dataset = ge$XenaDatasets,\n+   identifiers = \"EGR3\",\n+   use_probeMap = TRUE) %>% .[1, ]\n-> Obtaining gene symbols from probeMap...\nindexed 0B in  0s, 0B/sSOX10 = fetch_dense_values(host = ge$XenaHosts,\n  dataset = ge$XenaDatasets,\n  identifiers = \"SOX10\",\n  use_probeMap = TRUE) %>% .[1, ]\n-> Checking identifiers...                                                    \n-> Done.\n-> Checking samples...\n-> Done.\n-> Checking if the dataset has probeMap...\n-> Done. ProbeMap is found.\n> SOX10 = fetch_dense_values(host = ge$XenaHosts,\n+   dataset = ge$XenaDatasets,\n+   identifiers = \"SOX10\",\n+   use_probeMap = TRUE) %>% .[1, ]\n-> Obtaining gene symbols from probeMap...\n-> Checking identifiers...\n-> Done.\n-> Checking samples...\n-> Done.\n-> Checking if the dataset has probeMap...\n-> Done. ProbeMap is found.\n> merged_SOX10 = tibble(sample = names(SOX10),                                              \n+     SOX10_expression = as.numeric(SOX10)) %>%\n+   left_join(cli$GBM_survival.txt, by = \"sample\") %>%\n+   #filter(sample_type == \"Primary Tumor\") %>% # Keep only 'Primary Tumor'\n+     SOX10_expression = as.numeric(SOX10)) %>%\nError: unexpected ')' in:\n\"  #filter(sample_type == \"Primary Tumor\") %>% # Keep only 'Primary Tumor'\n    SOX10_expression = as.numeric(SOX10))\"\n>   left_join(cli$GBM_survival.txt, by = \"sample\") %>%\n+   filter(sample_type == \"Primary Tumor\") %>% # Keep only 'Primary Tumor'\n+ \n+ \n+ )\nError: unexpected ')' in:\n\"\n)\"\n> merged_SOX10 = tibble(sample = names(SOX10),                                              \n+     SOX10_expression = as.numeric(SOX10)) %>%\n+   left_join(cli$GBM_survival.txt, by = \"sample\") %>%\n+   filter(sample_type == \"Primary Tumor\") %>% # Keep only 'Primary Tumor'\n+ select(sample, SOX10_expression, OS.time, OS) %>%\n+   rename(time = OS.time,\n+     status = OS)\nError in `filter()`:\n! Problem while computing `..1 = sample_type == \"Primary Tumor\"`.\nCaused by error:\n! object 'sample_type' not found\nRun `rlang::last_error()` to see where the error occurred.\n> merged_SOX10 = tibble(sample = names(SOX10),\n+     SOX10_expression = as.numeric(SOX10)) %>%\n+   left_join(cli$GBM_survival.txt, by = \"sample\") %>%\n+   #filter(sample_type == \"Primary Tumor\") %>% # Keep only 'Primary Tumor'\n+   select(sample, SOX10_expression, OS.time, OS) %>%\n+   rename(time = OS.time,\n+     status = OS)\n> fit_SOX10 = coxph(Surv(time, status) ~SOX10_expression, data = merged_SOX10)\n> fit_SOX10\nCall:\ncoxph(formula = Surv(time, status) ~ SOX10_expression, data = merged_SOX10)\n\n                     coef exp(coef) se(coef)     z     p\nSOX10_expression 0.002416  1.002419 0.029267 0.083 0.934\n\nLikelihood ratio test=0.01  on 1 df, p=0.9342\nn= 166, number of events= 133 \n   (6 observations deleted due to missingness)\n> merged_SOX10 = merged_SOX10 %>%\n+   mutate(group = case_when(\n+     SOX10_expression > quantile(SOX10_expression, 0.9) ~'High',\n+     (SOX10_expression < quantile(SOX10_expression, 0.9) &\n+       SOX10_expression > quantile(SOX10_expression, 0.1)) ~'Normal',\n+     SOX10_expression < quantile(SOX10_expression, 0.1) ~'Low',\n+     TRUE~NA_character_\n+   )) %>%\n+   mutate(z = (SOX10_expression - mean(SOX10_expression)) / sd(SOX10_expression)) %>%\n+   mutate(group = case_when(\n+     z > 1.5~'High',\n+     z < -1.5~'Low',\n+     (z < 1.5) & (z > -1.5) ~'Normal',\n+     TRUE~NA_character_\n+   ))\n> fit_SOX10 = survfit(Surv(time, status) ~group,\n+   data = merged_SOX10 %>% dplyr::filter(group != \"Low\"))\n> SOX10_plot <- ggsurvplot(fit_SOX10,\n+   pval = TRUE,\n+   pval.coord = c(600, 0.5),\n+   #xlim = c(0, 1000),\n+   palette = c(\"#ffb464\", \"#126079\"),\n+   #conf.int = TRUE,\n+   #pval = TRUE,\n+   risk.table = TRUE,\n+   risk.table.col = \"strata\",\n+   legend.labs = c(\"High Expression\", \"Normal Expression\"),\n+   surv.median.line = \"hv\",\n+   break.time.by = 250,\n+     ggtheme = theme_prism(),\n+     legend = c(0.7, 0.8),\n+     title = \"SOX10-expression Stratisfied Survival Plot\")\n> SOX10_plot\n> ggsave(\"../plots/survival/SOX10survival.svg\", plot = print(SOX10_plot), height = 6, width ​‌​\n= 6)\n> ggsave(\"../plots/survival/SOX10survival.png\", plot = print(SOX10_plot), height = 6, width ​‌​\n= 6)\n> merged_EGR3 = tibble(sample = names(EGR3),                                                \n+     EGR3_expression = as.numeric(EGR3)) %>%\n+   left_join(cli$GBM_survival.txt, by = \"sample\") %>%\n+   #filter(sample_type == \"Primary Tumor\") %>% # Keep only 'Primary Tumor'\n+   select(sample, EGR3_expression, OS.time, OS) %>%\n+   rename(time = OS.time,\n+     status = OS)\n> fit_EGR3 = coxph(Surv(time, status) ~EGR3_expression, data = merged_EGR3)\n> fit_EGR3\nCall:\ncoxph(formula = Surv(time, status) ~ EGR3_expression, data = merged_EGR3)\n\n                   coef exp(coef) se(coef)     z     p\nEGR3_expression 0.05521   1.05676  0.06951 0.794 0.427\n\nLikelihood ratio test=0.63  on 1 df, p=0.4272\nn= 166, number of events= 133 \n   (6 observations deleted due to missingness)\n> merged_EGR3 = merged_EGR3 %>%\n+   mutate(group = case_when(\n+     EGR3_expression > quantile(EGR3_expression, 0.9) ~'High',\n+     (EGR3_expression < quantile(EGR3_expression, 0.9) &\n+       EGR3_expression > quantile(EGR3_expression, 0.1)) ~'Normal',\n+     EGR3_expression < quantile(EGR3_expression, 0.1) ~'Low',\n+     TRUE~NA_character_\n+   )) %>%\n+   mutate(z = (EGR3_expression - mean(EGR3_expression)) / sd(EGR3_expression)) %>%\n+   mutate(group = case_when(\n+     z > 1.5~'High',\n+     z < -1.5~'Low',\n+     (z < 1.5) & (z > -1.5) ~'Normal',\n+     TRUE~NA_character_\n+   ))\n> fit_EGR3 = survfit(Surv(time, status) ~group,\n+   data = merged_EGR3 %>% dplyr::filter(group != \"Low\"))\n> EGR3_plot <- ggsurvplot(fit_EGR3,\n+   pval = TRUE,\n+   pval.coord = c(600, 0.5),\n+   #xlim = c(0, 1000),\n+   palette = c(\"#ffb464\", \"#126079\"),\n+   #conf.int = TRUE,\n+   #pval = TRUE,\n+   risk.table = TRUE,\n+   risk.table.col = \"strata\",\n+   legend.labs = c(\"High Expression\", \"Normal Expression\"),\n+   surv.median.line = \"hv\",\n+   break.time.by = 250,\n+     ggtheme = theme_prism(),\n+     legend = c(0.7, 0.8),\n+     title = \"EGR3-expression Stratisfied Survival Plot\")\n> ggsave(\"../plots/survival/EGR3survival.png\", plot = print(EGR3_plot), height = 6, width = ​‌​\n6)\nEGR3_plot\n> EGR3_plot\n> EGR1_SOX10 <- merge(merged_EGR1, merged_SOX10, by = c(\"sample\", \"time\", \"status\")) %>%    \n+   select(\"sample\", \"time\", \"status\", \"z.x\", \"z.y\") %>%\n+   mutate(group = case_when(\n+     (z.x > 1) & (z.y > 1) ~'High',\n+     (z.x < -1) & (z.y < -1) ~'Low',\n+     TRUE~'Normal'\n+   ))\nError in merge(merged_EGR1, merged_SOX10, by = c(\"sample\", \"time\", \"status\")) : \n  object 'merged_EGR1' not found\n> merged_EGR1 = tibble(sample = names(EGR1),\n+     EGR1_expression = as.numeric(EGR1)) %>%\n+   left_join(cli$GBM_survival.txt, by = \"sample\") %>%\n+   #filter(sample_type == \"Primary Tumor\") %>% # Keep only 'Primary Tumor'\n+ select(sample, EGR1_expression, OS.time, OS) %>%\n+   rename(time = OS.time,\n+     status = OS)\nError in eval_tidy(xs[[j]], mask) : object 'EGR1' not found\n> EGR1 = fetch_dense_values(host = ge$XenaHosts,\n+   dataset = ge$XenaDatasets,\n+   identifiers = \"EGR1\",\n+   use_probeMap = TRUE) %>% .[1, ]\n-> Obtaining gene symbols from probeMap...\n-> Checking identifiers...\n-> Done.\n-> Checking samples...\n-> Done.\n-> Checking if the dataset has probeMap...\n-> Done. ProbeMap is found.\n> merged_EGR1 = tibble(sample = names(EGR1),\n+     EGR1_expression = as.numeric(EGR1)) %>%\n+   left_join(cli$GBM_survival.txt, by = \"sample\") %>%\n+   #filter(sample_type == \"Primary Tumor\") %>% # Keep only 'Primary Tumor'\n+   select(sample, EGR1_expression, OS.time, OS) %>%\n+   rename(time = OS.time,\n+     status = OS)\n> fit_EGR1 = coxph(Surv(time, status) ~EGR1_expression, data = merged_EGR1)\n> fit_EGR1\nCall:\ncoxph(formula = Surv(time, status) ~ EGR1_expression, data = merged_EGR1)\n\n                   coef exp(coef) se(coef)     z     p\nEGR1_expression 0.12023   1.12776  0.07905 1.521 0.128\n\nLikelihood ratio test=2.34  on 1 df, p=0.1261\nn= 166, number of events= 133 \n   (6 observations deleted due to missingness)\n> merged_EGR1 = merged_EGR1 %>%\n+   mutate(group = case_when(\n+     EGR1_expression > quantile(EGR1_expression, 0.9) ~'High',\n+     (EGR1_expression < quantile(EGR1_expression, 0.9) &\n+       EGR1_expression > quantile(EGR1_expression, 0.1)) ~'Normal',\n+     EGR1_expression < quantile(EGR1_expression, 0.1) ~'Low',\n+     TRUE~NA_character_\n+   )) %>%\n+   mutate(z = (EGR1_expression - mean(EGR1_expression)) / sd(EGR1_expression)) %>%\n+   mutate(group = case_when(\n+     z > 1.5~'High',\n+     z < -1.5~'Low',\n+     (z < 1.5) & (z > -1.5) ~'Normal',\n+     TRUE~NA_character_\n+   ))\n> fit_EGR1 = survfit(Surv(time, status) ~group,\n+   data = merged_EGR1 %>% dplyr::filter(group != \"Low\"))\n> EGR1_SOX10 <- merge(merged_EGR1, merged_SOX10, by = c(\"sample\", \"time\", \"status\")) %>%\n+   select(\"sample\", \"time\", \"status\", \"z.x\", \"z.y\") %>%\n+   mutate(group = case_when(\n+     (z.x > 1) & (z.y > 1) ~'High',\n+     (z.x < -1) & (z.y < -1) ~'Low',\n+     TRUE~'Normal'\n+   ))\n> EGR1_SOX10_corr <- ggplot(data = EGR1_SOX10, aes(x = z.x, y = z.y)) +\n+   geom_point() +\n+   theme_prism() +\n+   labs(title = \"EGR1 and SOX10 expression correlation\") +\n+   xlab(\"EGR1 expression\") +\n+   ylab(\"SOX10 expression\") +\n+   geom_smooth(method = \"lm\")\n> EGR1_SOX10_corr\n`geom_smooth()` using formula 'y ~ x'\n> fit_EGR1_SOX10 = survfit(Surv(time, status) ~group,\n+   data = EGR1_SOX10 %>% dplyr::filter(group != \"Low\"))\n> EGR1_SOX10_plot <- ggsurvplot(fit_EGR1_SOX10,\n+   pval = TRUE,\n+   pval.coord = c(600, 0.5),\n+   #xlim = c(0, 1000),\n+   palette = c(\"#ffb464\", \"#126079\"),\n+   #conf.int = TRUE,\n+   #pval = TRUE,\n+   risk.table = TRUE,\n+   risk.table.col = \"strata\",\n+   legend.labs = c(\"High Expression\", \"Normal Expression\"),\n+   surv.median.line = \"hv\",\n+   break.time.by = 250,\n+     ggtheme = theme_prism(),\n+     legend = c(0.7, 0.8),\n+     title = \"EGR1 and SOX10 expression Stratisfied Survival Plot\")\n> EGR1_SOX10_plot\n> Marking command key cache valid\n\n *** caught segfault ***\naddress 0x0, cause 'unknown'\n\nPossible actions:\n1: abort (with core dump, if enabled)\n2: normal R exit\n3: exit R without saving workspace\n4: exit R saving workspace\nSelection: 3\nroshanlodha@Roshans-MacBook-Air survival % clear                                            \nroshanlodha@Roshans-MacBook-Air survival % ",
			"settings":
			{
				"buffer_size": 82628,
				"line_ending": "Unix",
				"name": "Login Shell",
				"scratch": true
			},
			"undo_stack":
			[
				[
					2179,
					1,
					"terminus_render",
					null,
					"AQAAAC9CAQAAAAAAO0IBAAAAAAALAAAAU2VsZWN0aW9uOiA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA6QgEAAAAAADpCAQAAAAAAAAAAAAAA8L8"
				],
				[
					2181,
					2,
					"terminus_render",
					null,
					"OQAAAKs7AQAAAAAAwDsBAAAAAAAVAAAAKyAgICAgeiA+IDEuNX4nSGlnaCcswTsBAAAAAADWOwEAAAAAABUAAAArICAgICB6IDwgLTEuNX4nTG93JyzXOwEAAAAAAP47AQAAAAAAJwAAACsgICAgICh6IDwgMS41KSAmICh6ID4gLTEuNSkgfidOb3JtYWwnLP87AQAAAAAAFzwBAAAAAAAYAAAAKyAgICAgVFJVRX5OQV9jaGFyYWN0ZXJfGDwBAAAAAAAePAEAAAAAAAYAAAArICAgKSkfPAEAAAAAAE48AQAAAAAALwAAAD4gZml0X0VHUjEgPSBzdXJ2Zml0KFN1cnYodGltZSwgc3RhdHVzKSB+Z3JvdXAsTzwBAAAAAACIPAEAAAAAADkAAAArICAgZGF0YSA9IG1lcmdlZF9FR1IxICU+JSBkcGx5cjo6ZmlsdGVyKGdyb3VwICE9ICJMb3ciKSmJPAEAAAAAAOE8AQAAAAAAWAAAAD4gRUdSMV9TT1gxMCA8LSBtZXJnZShtZXJnZWRfRUdSMSwgbWVyZ2VkX1NPWDEwLCBieSA9IGMoInNhbXBsZSIsICJ0aW1lIiwgInN0YXR1cyIpKSAlPiXiPAEAAAAAABo9AQAAAAAAOAAAACsgICBzZWxlY3QoInNhbXBsZSIsICJ0aW1lIiwgInN0YXR1cyIsICJ6LngiLCAiei55IikgJT4lGz0BAAAAAAA4PQEAAAAAAB0AAAArICAgbXV0YXRlKGdyb3VwID0gY2FzZV93aGVuKDk9AQAAAAAAXT0BAAAAAAAkAAAAKyAgICAgKHoueCA+IDEpICYgKHoueSA+IDEpIH4nSGlnaCcsXj0BAAAAAACDPQEAAAAAACUAAAArICAgICAoei54IDwgLTEpICYgKHoueSA8IC0xKSB+J0xvdycshD0BAAAAAACXPQEAAAAAABMAAAArICAgICBUUlVFfidOb3JtYWwnmD0BAAAAAACePQEAAAAAAAYAAAArICAgKSmfPQEAAAAAAOY9AQAAAAAARwAAAD4gRUdSMV9TT1gxMF9jb3JyIDwtIGdncGxvdChkYXRhID0gRUdSMV9TT1gxMCwgYWVzKHggPSB6LngsIHkgPSB6LnkpKSAr5z0BAAAAAAD5PQEAAAAAABIAAAArICAgZ2VvbV9wb2ludCgpICv6PQEAAAAAAA0+AQAAAAAAEwAAACsgICB0aGVtZV9wcmlzbSgpICsOPgEAAAAAAEk+AQAAAAAAOwAAACsgICBsYWJzKHRpdGxlID0gIkVHUjEgYW5kIFNPWDEwIGV4cHJlc3Npb24gY29ycmVsYXRpb24iKSArSj4BAAAAAABnPgEAAAAAAB0AAAArICAgeGxhYigiRUdSMSBleHByZXNzaW9uIikgK2g+AQAAAAAAhj4BAAAAAAAeAAAAKyAgIHlsYWIoIlNPWDEwIGV4cHJlc3Npb24iKSArhz4BAAAAAAClPgEAAAAAAB4AAAArICAgZ2VvbV9zbW9vdGgobWV0aG9kID0gImxtIimmPgEAAAAAALc+AQAAAAAAEQAAAD4gRUdSMV9TT1gxMF9jb3JyuD4BAAAAAADdPgEAAAAAACUAAABgZ2VvbV9zbW9vdGgoKWAgdXNpbmcgZm9ybXVsYSAneSB+IHgn3j4BAAAAAAATPwEAAAAAADUAAAA+IGZpdF9FR1IxX1NPWDEwID0gc3VydmZpdChTdXJ2KHRpbWUsIHN0YXR1cykgfmdyb3VwLBQ/AQAAAAAATD8BAAAAAAA4AAAAKyAgIGRhdGEgPSBFR1IxX1NPWDEwICU+JSBkcGx5cjo6ZmlsdGVyKGdyb3VwICE9ICJMb3ciKSlNPwEAAAAAAHw/AQAAAAAALwAAAD4gRUdSMV9TT1gxMF9wbG90IDwtIGdnc3VydnBsb3QoZml0X0VHUjFfU09YMTAsfT8BAAAAAACNPwEAAAAAABAAAAArICAgcHZhbCA9IFRSVUUsjj8BAAAAAACrPwEAAAAAAB0AAAArICAgcHZhbC5jb29yZCA9IGMoNjAwLCAwLjUpLKw/AQAAAAAAwz8BAAAAAAAXAAAAKyAgICN4bGltID0gYygwLCAxMDAwKSzEPwEAAAAAAOo/AQAAAAAAJgAAACsgICBwYWxldHRlID0gYygiI2ZmYjQ2NCIsICIjMTI2MDc5Iiks6z8BAAAAAAAAQAEAAAAAABUAAAArICAgI2NvbmYuaW50ID0gVFJVRSwBQAEAAAAAABJAAQAAAAAAEQAAACsgICAjcHZhbCA9IFRSVUUsE0ABAAAAAAApQAEAAAAAABYAAAArICAgcmlzay50YWJsZSA9IFRSVUUsKkABAAAAAABIQAEAAAAAAB4AAAArICAgcmlzay50YWJsZS5jb2wgPSAic3RyYXRhIixJQAEAAAAAAIVAAQAAAAAAPAAAACsgICBsZWdlbmQubGFicyA9IGMoIkhpZ2ggRXhwcmVzc2lvbiIsICJOb3JtYWwgRXhwcmVzc2lvbiIpLIZAAQAAAAAAokABAAAAAAAcAAAAKyAgIHN1cnYubWVkaWFuLmxpbmUgPSAiaHYiLKNAAQAAAAAAu0ABAAAAAAAYAAAAKyAgIGJyZWFrLnRpbWUuYnkgPSAyNTAsvEABAAAAAADaQAEAAAAAAB4AAAArICAgICBnZ3RoZW1lID0gdGhlbWVfcHJpc20oKSzbQAEAAAAAAPZAAQAAAAAAGwAAACsgICAgIGxlZ2VuZCA9IGMoMC43LCAwLjgpLPdAAQAAAAAAO0EBAAAAAABEAAAAKyAgICAgdGl0bGUgPSAiRUdSMSBhbmQgU09YMTAgZXhwcmVzc2lvbiBTdHJhdGlzZmllZCBTdXJ2aXZhbCBQbG90Iik8QQEAAAAAAE1BAQAAAAAAEQAAAD4gRUdSMV9TT1gxMF9wbG90TkEBAAAAAABvQQEAAAAAACEAAAA+IE1hcmtpbmcgY29tbWFuZCBrZXkgY2FjaGUgdmFsaWRwQQEAAAAAAHBBAQAAAAAAAAAAAHFBAQAAAAAAiUEBAAAAAAAYAAAAICoqKiBjYXVnaHQgc2VnZmF1bHQgKioqikEBAAAAAACmQQEAAAAAABwAAABhZGRyZXNzIDB4MCwgY2F1c2UgJ3Vua25vd24np0EBAAAAAACnQQEAAAAAAAAAAACoQQEAAAAAALlBAQAAAAAAEQAAAFBvc3NpYmxlIGFjdGlvbnM6ukEBAAAAAADfQQEAAAAAACUAAAAxOiBhYm9ydCAod2l0aCBjb3JlIGR1bXAsIGlmIGVuYWJsZWQp4EEBAAAAAADwQQEAAAAAABAAAAAyOiBub3JtYWwgUiBleGl08UEBAAAAAAATQgEAAAAAACIAAAAzOiBleGl0IFIgd2l0aG91dCBzYXZpbmcgd29ya3NwYWNlFEIBAAAAAAAuQgEAAAAAABoAAAA0OiBleGl0IFIgc2F2aW5nIHdvcmtzcGFjZS9CAQAAAAAAO0IBAAAAAAAMAAAAU2VsZWN0aW9uOiAzO0IBAAAAAAA8QgEAAAAAAAAAAAA8QgEAAAAAADxCAQAAAAAAAAAAADxCAQAAAAAAZkIBAAAAAAAAAAAAZkIBAAAAAACYQgEAAAAAAAAAAABnQgEAAAAAAGdCAQAAAAAAMQAAACAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA7QgEAAAAAADtCAQAAAAAAAAAAAAAA8L8"
				],
				[
					2183,
					1,
					"terminus_render",
					null,
					"AwAAADxCAQAAAAAAaEIBAAAAAAArAAAAcm9zaGFubG9kaGFAUm9zaGFucy1NYWNCb29rLUFpciBzdXJ2aXZhbCAlIGhCAQAAAAAAmEIBAAAAAAAAAAAAaEIBAAAAAABoQgEAAAAAADAAAAAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABnQgEAAAAAAGdCAQAAAAAAAAAAAAAA8L8"
				],
				[
					2185,
					1,
					"terminus_render",
					null,
					"AwAAADxCAQAAAAAAaUIBAAAAAAAsAAAAcm9zaGFubG9kaGFAUm9zaGFucy1NYWNCb29rLUFpciBzdXJ2aXZhbCAlIGNpQgEAAAAAAJhCAQAAAAAAAAAAAGlCAQAAAAAAaUIBAAAAAAAvAAAAICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABoQgEAAAAAAGhCAQAAAAAAAAAAAAAA8L8"
				],
				[
					2187,
					1,
					"terminus_render",
					null,
					"AwAAADxCAQAAAAAAakIBAAAAAAAtAAAAcm9zaGFubG9kaGFAUm9zaGFucy1NYWNCb29rLUFpciBzdXJ2aXZhbCAlIGNsakIBAAAAAACYQgEAAAAAAAAAAABqQgEAAAAAAGpCAQAAAAAALgAAACAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABpQgEAAAAAAGlCAQAAAAAAAAAAAAAA8L8"
				],
				[
					2189,
					1,
					"terminus_render",
					null,
					"AwAAADxCAQAAAAAAa0IBAAAAAAAuAAAAcm9zaGFubG9kaGFAUm9zaGFucy1NYWNCb29rLUFpciBzdXJ2aXZhbCAlIGNsZWtCAQAAAAAAmEIBAAAAAAAAAAAAa0IBAAAAAABrQgEAAAAAAC0AAAAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABqQgEAAAAAAGpCAQAAAAAAAAAAAAAA8L8"
				],
				[
					2191,
					1,
					"terminus_render",
					null,
					"AwAAADxCAQAAAAAAbEIBAAAAAAAvAAAAcm9zaGFubG9kaGFAUm9zaGFucy1NYWNCb29rLUFpciBzdXJ2aXZhbCAlIGNsZWFsQgEAAAAAAJhCAQAAAAAAAAAAAGxCAQAAAAAAbEIBAAAAAAAsAAAAICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABrQgEAAAAAAGtCAQAAAAAAAAAAAAAA8L8"
				],
				[
					2193,
					1,
					"terminus_render",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABsQgEAAAAAAGxCAQAAAAAAAAAAAAAA8L8"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"terminus",
				"Terminus: Open Default Shell in Tab (View)"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"sendcode",
				"SendCode: Choose Program"
			],
			[
				"forma",
				"Formatter: Open Config Files"
			],
			[
				"termin",
				"Terminus: Open Default Shell in Panel"
			],
			[
				"package cont",
				"Package Control: Enable Package"
			],
			[
				"open file",
				"File: Open this file with an external application"
			],
			[
				"install p",
				"Package Control: Install Package"
			],
			[
				"ter",
				"Terminal: Open"
			],
			[
				"terminal",
				"Terminal: Open"
			],
			[
				"git push",
				"Git: Push"
			],
			[
				"git commit",
				"Git: Commit"
			],
			[
				"git add",
				"Git: Add All"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"git: push",
				"Git: Push"
			],
			[
				"Package Control: git",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 56.0,
		"history":
		[
			"for (package in c('biomaRt', 'tidyverse', 'tximport', 'ensembldb', 'EnsDb.Hsapiens.v86', \n                  'edgeR', 'matrixStats', 'cowplot', 'DESeq2', 'apeglm', \n                  'DT', 'plotly', 'gt',\n                  'limma', 'ggrepel',\n                  'GSEABase', 'Biobase', 'GSVA', 'gprofiler2', \n                  'clusterProfiler', 'msigdbr', 'enrichplot',\n                  'ggthemes', 'ggprism',\n                  'org.Hs.eg.db', 'annotate',\n                  'clusterProfiler', 'enrichplot',\n                  'gtsummary', 'ggforce', 'ggdendro',\n                  'ggpubr',\n                  'umap')) {\n  if (!require(package, character.only=T, quietly=T)) {\n    install.packages(package)\n    library(package, character.only=T)\n  }\n}",
			"ls",
			"dplyr()",
			"dplyr",
			"dplyr::",
			"git",
			"1+1",
			"1=1",
			"ls",
			"install.packages",
			"read_csv()"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/roshanlodha/Documents/bev",
		"/Users/roshanlodha/Documents/bev/survival"
	],
	"file_history":
	[
		"/Users/roshanlodha/Documents/bev/survival/survival.R",
		"/Users/roshanlodha/Documents/bev/ihc/ihc.R",
		"/Users/roshanlodha/Documents/bev/ihc/meetingnotes.md",
		"/Users/roshanlodha/Documents/bev/bev.R",
		"/Users/roshanlodha/Library/Application Support/Sublime Text/Packages/User/formatter.assets/config/cleancssrc.json",
		"/Users/roshanlodha/Library/Application Support/Sublime Text/Packages/User/formatter.assets/config/rubocoprc.yml",
		"/Users/roshanlodha/Library/Application Support/Sublime Text/Packages/User/formatter.assets/config/yapfrc.yapf",
		"/Users/roshanlodha/Library/Application Support/Sublime Text/Packages/User/formatter.assets/config/uncrustifyrc.cfg",
		"/Users/roshanlodha/Library/Application Support/Sublime Text/Packages/User/formatter.assets/config/uncrustifyrc_objc.cfg",
		"/Users/roshanlodha/Library/Application Support/Sublime Text/Packages/User/formatter.assets/config/prettierrc.json",
		"/Users/roshanlodha/Library/Application Support/Sublime Text/Packages/User/formatter.assets/config/jsbeautifyrc.json",
		"/Users/roshanlodha/Library/Application Support/Sublime Text/Packages/User/formatter.assets/config/jsonmaxrc.json",
		"/Users/roshanlodha/Library/Application Support/Sublime Text/Packages/User/formatter.assets/config/clangformatrc.yaml",
		"/Users/roshanlodha/Library/Application Support/Sublime Text/Packages/User/formatter.assets/config/htmltidyrc_xml.cfg",
		"/Users/roshanlodha/Library/Application Support/Sublime Text/Packages/User/formatter.assets/config/htmltidyrc_html.cfg",
		"/Users/roshanlodha/Library/Application Support/Sublime Text/Packages/User/formatter.assets/config/htmlminifierrc.json",
		"/Users/roshanlodha/Library/Application Support/Sublime Text/Packages/User/formatter.assets/config/csscombrc.json",
		"/Users/roshanlodha/Library/Application Support/Sublime Text/Packages/User/formatter.assets/config/stylelintrc.json",
		"/Users/roshanlodha/Library/Application Support/Sublime Text/Packages/User/formatter.assets/config/blackrc.toml",
		"/Users/roshanlodha/Library/Application Support/Sublime Text/Packages/User/formatter.assets/config/eslintrc.json",
		"/Users/roshanlodha/Library/Application Support/Sublime Text/Packages/User/formatter.assets/config/phpcsfixerrc.php",
		"/Users/roshanlodha/Library/Application Support/Sublime Text/Packages/User/formatter.assets/config/perltidyrc.cfg",
		"/Users/roshanlodha/Library/Application Support/Sublime Text/Packages/User/formatter.assets/config/beautyshrc.json",
		"/Users/roshanlodha/Library/Application Support/Sublime Text/Packages/User/formatter.assets/config/terserrc.json",
		"/Users/roshanlodha/Documents/bevacizumab-response/.gitignore",
		"/Users/roshanlodha/Documents/bevacizumab-response/bev.R",
		"/Users/roshanlodha/Documents/bevacizumab-response/raw/bev_analysis.R",
		"/Users/roshanlodha/Downloads/temp",
		"/Users/roshanlodha/Documents/astrocytoma-analysis/.gitignore",
		"/Users/roshanlodha/Documents/physiology-notes/renal.md",
		"/Users/roshanlodha/Documents/pathology-notes/renal.md",
		"/Users/roshanlodha/Documents/pathology-notes/images/nephrotic.png",
		"/Users/roshanlodha/Desktop/renal.md",
		"/Users/roshanlodha/Documents/machine-learning/README.md",
		"/Users/roshanlodha/Documents/pathology-notes/endocrine/thyroid.md",
		"/Users/roshanlodha/Library/Application Support/Sublime Text/Packages/User/pandoc.md2pdf.sublime-build",
		"/Users/roshanlodha/Documents/pathology/endocrine/thyroid.md",
		"/Users/roshanlodha/Documents/machine-learning/andrew-ng-notes /notes.md",
		"/Users/roshanlodha/Documents/machine-learning/andrew-ng-notes /Week1.md",
		"/Users/roshanlodha/Documents/machine-learning/andrew-ng-notes /Week2.md",
		"/Users/roshanlodha/Documents/GI/week1/CAPP1.docx",
		"/Users/roshanlodha/Documents/groups.py",
		"/Users/roshanlodha/Downloads/groups.py",
		"/Users/roshanlodha/Documents/roshanlodha.github.io/index.html",
		"/Users/roshanlodha/Documents/bevacizumab-response/README.md",
		"/Users/roshanlodha/Documents/bev_analysis/bev_analysis.R",
		"/Users/roshanlodha/Desktop/bev_analysis.R",
		"/Users/roshanlodha/Desktop/tables.R",
		"/Users/roshanlodha/Documents/gladson lab/bev_analysis/analysis.R"
	],
	"find":
	{
		"height": 26.0
	},
	"find_in_files":
	{
		"height": 158.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"CHRNA7",
			"SOX10",
			"EGR1",
			".svg",
			"fig",
			"fig1",
			"plots/",
			"./plots/",
			"ls",
			"% in %",
			"<- 1",
			"<- 1.5",
			"<-",
			"ggsave",
			"% > %",
			" - ",
			"% > %",
			"< -",
			"% > %",
			"# # ",
			"----",
			"% > %",
			"./ihc",
			"./",
			"ggsave",
			"RAMP3_expression",
			"ggsave",
			"ggsav",
			"ggsave",
			"RAMP3_expression",
			"\n",
			"  ",
			"{r",
			"## ----",
			"%in%"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 82628,
						"regions":
						{
						},
						"selection":
						[
							[
								82628,
								82628
							]
						],
						"settings":
						{
							"__vi_external_disable": true,
							"auto_complete": false,
							"auto_complete_commit_on_tab": false,
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone_locations":
							{
							},
							"bracket_highlighter.ignore": true,
							"color_scheme": "Terminus.hidden-color-scheme",
							"draw_centered": false,
							"draw_indent_guides": false,
							"draw_unicode_white_space": false,
							"draw_white_space": "none",
							"gutter": false,
							"highlight_line": false,
							"is_widget": true,
							"lsp_uri": "buffer://sublime/44",
							"result_base_dir": "/Users/roshanlodha/Documents/bev",
							"result_file_regex": null,
							"result_line_regex": null,
							"rulers":
							[
								500
							],
							"scroll_past_end": true,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"terminus.highlight_counter": 15467,
							"terminus_view": true,
							"terminus_view.args":
							{
								"auto_close": true,
								"cancellable": false,
								"cmd":
								[
									"/bin/zsh",
									"-i",
									"-l"
								],
								"cwd": "/Users/roshanlodha/Documents/bev",
								"default_title": "Login Shell",
								"env":
								{
									"LANG": "en_US.UTF-8",
									"TERM": "linux",
									"TERMINUS_SUBLIME": "1",
									"TERM_PROGRAM": "Terminus-Sublime"
								},
								"file_regex": null,
								"line_regex": null,
								"panel_name": "Terminus",
								"show_in_panel": null,
								"tag": null,
								"timeit": false,
								"title": null
							},
							"terminus_view.cancellable": false,
							"terminus_view.key.ctrl+k": true,
							"terminus_view.key.ctrl+p": true,
							"terminus_view.natural_keyboard": true,
							"terminus_view.tag": null,
							"terminus_view.viewport_y": 28920.0,
							"word_wrap": false
						},
						"translation.x": 0.0,
						"translation.y": 28920.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.534136199951,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.Terminus":
	{
		"height": 172.0
	},
	"output.Terminus 2":
	{
		"height": 126.0
	},
	"output.Terminus 3":
	{
		"height": 126.0
	},
	"output.Terminus 4":
	{
		"height": 46.0
	},
	"output.diagnostics":
	{
		"height": 232.0
	},
	"output.exec":
	{
		"height": 209.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 108.0
	},
	"output.git-commit":
	{
		"height": 126.0
	},
	"output.git-push":
	{
		"height": 126.0
	},
	"output.language servers":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/R/R.sublime-build",
	"project": "bev.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 189.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
